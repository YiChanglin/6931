{
	"id": "b71e075b4dfda9bcb3b50d84c28cea9d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StableSwapAMM.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract StableSwapAMM {\n    uint256 public A;\n    uint256 public D;\n    mapping(address => uint256) public tokenBalances;\n\n    constructor(uint256 _A) {\n        A = _A;\n        D = 0;\n    }\n\n    function deposit(address token, uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than zero\");\n        tokenBalances[token] += amount;\n        D += amount; // Adjust total liquidity\n    }\n\n    function withdraw(address token, uint256 amount) external {\n        require(amount <= tokenBalances[token], \"Insufficient balance\");\n        tokenBalances[token] -= amount;\n        D -= amount; // Adjust total liquidity\n    }\n\n    function calculateInvariant(uint256[] memory amounts) public view returns (uint256) {\n        uint256 sumXi = 0;\n        uint256 prodXi = 1;\n\n        for (uint256 i = 0; i < amounts.length; i++) {\n            sumXi += amounts[i];\n            prodXi *= amounts[i];\n        }\n\n        uint256 newD = (A * 2 * sumXi + A * sumXi) / (4 * prodXi);\n        return newD;\n    }\n\n    function swap(address fromToken, address toToken, uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than zero\");\n        uint256 priceImpact = calculatePriceImpact(amount);\n        \n        tokenBalances[fromToken] += amount;\n        tokenBalances[toToken] -= priceImpact;\n    }\n\n    function calculatePriceImpact(uint256 amount) private pure returns (uint256) {\n        return amount; // Simplified, apply invariant-based adjustments\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StableSwapAMM.sol": {
				"StableSwapAMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_A",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "A",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "D",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "calculateInvariant",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StableSwapAMM.sol\":115:1609  contract StableSwapAMM {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StableSwapAMM.sol\":243:305  constructor(uint256 _A) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StableSwapAMM.sol\":281:283  _A */\n  dup1\n    /* \"contracts/StableSwapAMM.sol\":277:278  A */\n  0x00\n    /* \"contracts/StableSwapAMM.sol\":277:283  A = _A */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StableSwapAMM.sol\":297:298  0 */\n  0x00\n    /* \"contracts/StableSwapAMM.sol\":293:294  D */\n  0x01\n    /* \"contracts/StableSwapAMM.sol\":293:298  D = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StableSwapAMM.sol\":243:305  constructor(uint256 _A) {... */\n  pop\n    /* \"contracts/StableSwapAMM.sol\":115:1609  contract StableSwapAMM {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_11:\n    /* \"#utility.yul\":490:514   */\n  tag_19\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_20:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_12:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_22\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_25\n  tag_8\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":781:900   */\ntag_24:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_26\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/StableSwapAMM.sol\":115:1609  contract StableSwapAMM {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StableSwapAMM.sol\":115:1609  contract StableSwapAMM {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5cd1d31d\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x5cd1d31d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdf791e50\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf446c1d0\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x0f529ba2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x523fba7f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StableSwapAMM.sol\":166:182  uint256 public D */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableSwapAMM.sol\":311:527  function deposit(address token, uint256 amount) external {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/StableSwapAMM.sol\":188:236  mapping(address => uint256) public tokenBalances */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableSwapAMM.sol\":764:1132  function calculateInvariant(uint256[] memory amounts) public view returns (uint256) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableSwapAMM.sol\":1138:1445  function swap(address fromToken, address toToken, uint256 amount) external {... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/StableSwapAMM.sol\":533:758  function withdraw(address token, uint256 amount) external {... */\n    tag_8:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/StableSwapAMM.sol\":144:160  uint256 public A */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StableSwapAMM.sol\":166:182  uint256 public D */\n    tag_12:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/StableSwapAMM.sol\":311:527  function deposit(address token, uint256 amount) external {... */\n    tag_18:\n        /* \"contracts/StableSwapAMM.sol\":395:396  0 */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":386:392  amount */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":386:396  amount > 0 */\n      gt\n        /* \"contracts/StableSwapAMM.sol\":378:433  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/StableSwapAMM.sol\":467:473  amount */\n      dup1\n        /* \"contracts/StableSwapAMM.sol\":443:456  tokenBalances */\n      0x02\n        /* \"contracts/StableSwapAMM.sol\":443:463  tokenBalances[token] */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":457:462  token */\n      dup5\n        /* \"contracts/StableSwapAMM.sol\":443:463  tokenBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":443:473  tokenBalances[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableSwapAMM.sol\":488:494  amount */\n      dup1\n        /* \"contracts/StableSwapAMM.sol\":483:484  D */\n      0x01\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":483:494  D += amount */\n      dup3\n      dup3\n      sload\n      tag_45\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_45:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableSwapAMM.sol\":311:527  function deposit(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableSwapAMM.sol\":188:236  mapping(address => uint256) public tokenBalances */\n    tag_22:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StableSwapAMM.sol\":764:1132  function calculateInvariant(uint256[] memory amounts) public view returns (uint256) {... */\n    tag_27:\n        /* \"contracts/StableSwapAMM.sol\":839:846  uint256 */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":858:871  uint256 sumXi */\n      dup1\n        /* \"contracts/StableSwapAMM.sol\":874:875  0 */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":858:875  uint256 sumXi = 0 */\n      swap1\n      pop\n        /* \"contracts/StableSwapAMM.sol\":885:899  uint256 prodXi */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":902:903  1 */\n      0x01\n        /* \"contracts/StableSwapAMM.sol\":885:903  uint256 prodXi = 1 */\n      swap1\n      pop\n        /* \"contracts/StableSwapAMM.sol\":919:928  uint256 i */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":914:1037  for (uint256 i = 0; i < amounts.length; i++) {... */\n    tag_47:\n        /* \"contracts/StableSwapAMM.sol\":938:945  amounts */\n      dup5\n        /* \"contracts/StableSwapAMM.sol\":938:952  amounts.length */\n      mload\n        /* \"contracts/StableSwapAMM.sol\":934:935  i */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":934:952  i < amounts.length */\n      lt\n        /* \"contracts/StableSwapAMM.sol\":914:1037  for (uint256 i = 0; i < amounts.length; i++) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \"contracts/StableSwapAMM.sol\":982:989  amounts */\n      dup5\n        /* \"contracts/StableSwapAMM.sol\":990:991  i */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":982:992  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_50\n      jumpi\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StableSwapAMM.sol\":973:992  sumXi += amounts[i] */\n      dup4\n      tag_53\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_53:\n      swap3\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1016:1023  amounts */\n      dup5\n        /* \"contracts/StableSwapAMM.sol\":1024:1025  i */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":1016:1026  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_55\n      tag_52\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StableSwapAMM.sol\":1006:1026  prodXi *= amounts[i] */\n      dup3\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      swap2\n      pop\n        /* \"contracts/StableSwapAMM.sol\":954:957  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/StableSwapAMM.sol\":914:1037  for (uint256 i = 0; i < amounts.length; i++) {... */\n      jump(tag_47)\n    tag_48:\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1047:1059  uint256 newD */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1097:1103  prodXi */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":1093:1094  4 */\n      0x04\n        /* \"contracts/StableSwapAMM.sol\":1093:1103  4 * prodXi */\n      tag_58\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_58:\n        /* \"contracts/StableSwapAMM.sol\":1083:1088  sumXi */\n      dup4\n        /* \"contracts/StableSwapAMM.sol\":1079:1080  A */\n      sload(0x00)\n        /* \"contracts/StableSwapAMM.sol\":1079:1088  A * sumXi */\n      tag_59\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_59:\n        /* \"contracts/StableSwapAMM.sol\":1071:1076  sumXi */\n      dup5\n        /* \"contracts/StableSwapAMM.sol\":1067:1068  2 */\n      0x02\n        /* \"contracts/StableSwapAMM.sol\":1063:1064  A */\n      sload(0x00)\n        /* \"contracts/StableSwapAMM.sol\":1063:1068  A * 2 */\n      tag_60\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_60:\n        /* \"contracts/StableSwapAMM.sol\":1063:1076  A * 2 * sumXi */\n      tag_61\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_61:\n        /* \"contracts/StableSwapAMM.sol\":1063:1088  A * 2 * sumXi + A * sumXi */\n      tag_62\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_62:\n        /* \"contracts/StableSwapAMM.sol\":1062:1104  (A * 2 * sumXi + A * sumXi) / (4 * prodXi) */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/StableSwapAMM.sol\":1047:1104  uint256 newD = (A * 2 * sumXi + A * sumXi) / (4 * prodXi) */\n      swap1\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1121:1125  newD */\n      dup1\n        /* \"contracts/StableSwapAMM.sol\":1114:1125  return newD */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StableSwapAMM.sol\":764:1132  function calculateInvariant(uint256[] memory amounts) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StableSwapAMM.sol\":1138:1445  function swap(address fromToken, address toToken, uint256 amount) external {... */\n    tag_32:\n        /* \"contracts/StableSwapAMM.sol\":1240:1241  0 */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1231:1237  amount */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":1231:1241  amount > 0 */\n      gt\n        /* \"contracts/StableSwapAMM.sol\":1223:1278  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_42\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/StableSwapAMM.sol\":1288:1307  uint256 priceImpact */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1310:1338  calculatePriceImpact(amount) */\n      tag_68\n        /* \"contracts/StableSwapAMM.sol\":1331:1337  amount */\n      dup3\n        /* \"contracts/StableSwapAMM.sol\":1310:1330  calculatePriceImpact */\n      tag_69\n        /* \"contracts/StableSwapAMM.sol\":1310:1338  calculatePriceImpact(amount) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/StableSwapAMM.sol\":1288:1338  uint256 priceImpact = calculatePriceImpact(amount) */\n      swap1\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1385:1391  amount */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":1357:1370  tokenBalances */\n      0x02\n        /* \"contracts/StableSwapAMM.sol\":1357:1381  tokenBalances[fromToken] */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1371:1380  fromToken */\n      dup7\n        /* \"contracts/StableSwapAMM.sol\":1357:1381  tokenBalances[fromToken] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1357:1391  tokenBalances[fromToken] += amount */\n      dup3\n      dup3\n      sload\n      tag_70\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_70:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1427:1438  priceImpact */\n      dup1\n        /* \"contracts/StableSwapAMM.sol\":1401:1414  tokenBalances */\n      0x02\n        /* \"contracts/StableSwapAMM.sol\":1401:1423  tokenBalances[toToken] */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1415:1422  toToken */\n      dup6\n        /* \"contracts/StableSwapAMM.sol\":1401:1423  tokenBalances[toToken] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1401:1438  tokenBalances[toToken] -= priceImpact */\n      dup3\n      dup3\n      sload\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1213:1445  {... */\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1138:1445  function swap(address fromToken, address toToken, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableSwapAMM.sol\":533:758  function withdraw(address token, uint256 amount) external {... */\n    tag_35:\n        /* \"contracts/StableSwapAMM.sol\":619:632  tokenBalances */\n      0x02\n        /* \"contracts/StableSwapAMM.sol\":619:639  tokenBalances[token] */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":633:638  token */\n      dup4\n        /* \"contracts/StableSwapAMM.sol\":619:639  tokenBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StableSwapAMM.sol\":609:615  amount */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":609:639  amount <= tokenBalances[token] */\n      gt\n      iszero\n        /* \"contracts/StableSwapAMM.sol\":601:664  require(amount <= tokenBalances[token], \"Insufficient balance\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/StableSwapAMM.sol\":698:704  amount */\n      dup1\n        /* \"contracts/StableSwapAMM.sol\":674:687  tokenBalances */\n      0x02\n        /* \"contracts/StableSwapAMM.sol\":674:694  tokenBalances[token] */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":688:693  token */\n      dup5\n        /* \"contracts/StableSwapAMM.sol\":674:694  tokenBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":674:704  tokenBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_77\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_77:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableSwapAMM.sol\":719:725  amount */\n      dup1\n        /* \"contracts/StableSwapAMM.sol\":714:715  D */\n      0x01\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":714:725  D -= amount */\n      dup3\n      dup3\n      sload\n      tag_78\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_78:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StableSwapAMM.sol\":533:758  function withdraw(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StableSwapAMM.sol\":144:160  uint256 public A */\n    tag_37:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/StableSwapAMM.sol\":1451:1607  function calculatePriceImpact(uint256 amount) private pure returns (uint256) {... */\n    tag_69:\n        /* \"contracts/StableSwapAMM.sol\":1519:1526  uint256 */\n      0x00\n        /* \"contracts/StableSwapAMM.sol\":1545:1551  amount */\n      dup2\n        /* \"contracts/StableSwapAMM.sol\":1538:1551  return amount */\n      swap1\n      pop\n        /* \"contracts/StableSwapAMM.sol\":1451:1607  function calculatePriceImpact(uint256 amount) private pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_80:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_81:\n        /* \"#utility.yul\":177:201   */\n      tag_110\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_80\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_14:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_112\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_81\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:517   */\n    tag_82:\n        /* \"#utility.yul\":475:481   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x40\n        /* \"#utility.yul\":502:511   */\n      mload\n        /* \"#utility.yul\":492:511   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:517   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_83:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_84:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_85:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_86:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_118\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_85\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_87:\n        /* \"#utility.yul\":1076:1100   */\n      tag_120\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_86\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_121:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_88:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_123\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_87\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_89:\n        /* \"#utility.yul\":1349:1373   */\n      tag_125\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_80\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_126:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_90:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_128\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_89\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_17:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_131\n      tag_83\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1642:1761   */\n    tag_130:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_132\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_88\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_133\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_90\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_21:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_136\n      tag_83\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2105:2224   */\n    tag_135:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_137\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_88\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2481   */\n    tag_91:\n        /* \"#utility.yul\":2473:2474   */\n      0x00\n        /* \"#utility.yul\":2470:2471   */\n      dup1\n        /* \"#utility.yul\":2463:2475   */\n      revert\n        /* \"#utility.yul\":2487:2589   */\n    tag_92:\n        /* \"#utility.yul\":2528:2534   */\n      0x00\n        /* \"#utility.yul\":2579:2581   */\n      0x1f\n        /* \"#utility.yul\":2575:2582   */\n      not\n        /* \"#utility.yul\":2570:2572   */\n      0x1f\n        /* \"#utility.yul\":2563:2568   */\n      dup4\n        /* \"#utility.yul\":2559:2573   */\n      add\n        /* \"#utility.yul\":2555:2583   */\n      and\n        /* \"#utility.yul\":2545:2583   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2595:2775   */\n    tag_93:\n        /* \"#utility.yul\":2643:2720   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2721   */\n      mstore\n        /* \"#utility.yul\":2740:2744   */\n      0x41\n        /* \"#utility.yul\":2737:2738   */\n      0x04\n        /* \"#utility.yul\":2730:2745   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2781:3062   */\n    tag_94:\n        /* \"#utility.yul\":2864:2891   */\n      tag_142\n        /* \"#utility.yul\":2886:2890   */\n      dup3\n        /* \"#utility.yul\":2864:2891   */\n      tag_92\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2852:2892   */\n      add\n        /* \"#utility.yul\":2994:3000   */\n      dup2\n        /* \"#utility.yul\":2982:2992   */\n      dup2\n        /* \"#utility.yul\":2979:3001   */\n      lt\n        /* \"#utility.yul\":2958:2976   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2946:2956   */\n      dup3\n        /* \"#utility.yul\":2943:2977   */\n      gt\n        /* \"#utility.yul\":2940:3002   */\n      or\n        /* \"#utility.yul\":2937:3025   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":3005:3023   */\n      tag_144\n      tag_93\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2937:3025   */\n    tag_143:\n        /* \"#utility.yul\":3045:3055   */\n      dup1\n        /* \"#utility.yul\":3041:3043   */\n      0x40\n        /* \"#utility.yul\":3034:3056   */\n      mstore\n        /* \"#utility.yul\":2824:3062   */\n      pop\n        /* \"#utility.yul\":2781:3062   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3197   */\n    tag_95:\n        /* \"#utility.yul\":3102:3108   */\n      0x00\n        /* \"#utility.yul\":3129:3149   */\n      tag_146\n      tag_82\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3119:3149   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3191   */\n      tag_147\n        /* \"#utility.yul\":3186:3190   */\n      dup3\n        /* \"#utility.yul\":3178:3184   */\n      dup3\n        /* \"#utility.yul\":3158:3191   */\n      tag_94\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3068:3197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3203:3514   */\n    tag_96:\n        /* \"#utility.yul\":3280:3284   */\n      0x00\n        /* \"#utility.yul\":3370:3388   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3362:3368   */\n      dup3\n        /* \"#utility.yul\":3359:3389   */\n      gt\n        /* \"#utility.yul\":3356:3412   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":3392:3410   */\n      tag_150\n      tag_93\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3356:3412   */\n    tag_149:\n        /* \"#utility.yul\":3442:3446   */\n      0x20\n        /* \"#utility.yul\":3434:3440   */\n      dup3\n        /* \"#utility.yul\":3430:3447   */\n      mul\n        /* \"#utility.yul\":3422:3447   */\n      swap1\n      pop\n        /* \"#utility.yul\":3502:3506   */\n      0x20\n        /* \"#utility.yul\":3496:3500   */\n      dup2\n        /* \"#utility.yul\":3492:3507   */\n      add\n        /* \"#utility.yul\":3484:3507   */\n      swap1\n      pop\n        /* \"#utility.yul\":3203:3514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3520:3637   */\n    tag_97:\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3626:3627   */\n      dup1\n        /* \"#utility.yul\":3619:3631   */\n      revert\n        /* \"#utility.yul\":3660:4370   */\n    tag_98:\n        /* \"#utility.yul\":3756:3761   */\n      0x00\n        /* \"#utility.yul\":3781:3862   */\n      tag_153\n        /* \"#utility.yul\":3797:3861   */\n      tag_154\n        /* \"#utility.yul\":3854:3860   */\n      dup5\n        /* \"#utility.yul\":3797:3861   */\n      tag_96\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3781:3862   */\n      tag_95\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3772:3862   */\n      swap1\n      pop\n        /* \"#utility.yul\":3882:3887   */\n      dup1\n        /* \"#utility.yul\":3911:3917   */\n      dup4\n        /* \"#utility.yul\":3904:3909   */\n      dup3\n        /* \"#utility.yul\":3897:3918   */\n      mstore\n        /* \"#utility.yul\":3945:3949   */\n      0x20\n        /* \"#utility.yul\":3938:3943   */\n      dup3\n        /* \"#utility.yul\":3934:3950   */\n      add\n        /* \"#utility.yul\":3927:3950   */\n      swap1\n      pop\n        /* \"#utility.yul\":3998:4002   */\n      0x20\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3986:4003   */\n      mul\n        /* \"#utility.yul\":3978:3984   */\n      dup4\n        /* \"#utility.yul\":3974:4004   */\n      add\n        /* \"#utility.yul\":4027:4030   */\n      dup6\n        /* \"#utility.yul\":4019:4025   */\n      dup2\n        /* \"#utility.yul\":4016:4031   */\n      gt\n        /* \"#utility.yul\":4013:4135   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":4046:4125   */\n      tag_156\n      tag_97\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4013:4135   */\n    tag_155:\n        /* \"#utility.yul\":4161:4167   */\n      dup4\n        /* \"#utility.yul\":4144:4364   */\n    tag_157:\n        /* \"#utility.yul\":4178:4184   */\n      dup2\n        /* \"#utility.yul\":4173:4176   */\n      dup2\n        /* \"#utility.yul\":4170:4185   */\n      lt\n        /* \"#utility.yul\":4144:4364   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":4253:4256   */\n      dup1\n        /* \"#utility.yul\":4282:4319   */\n      tag_160\n        /* \"#utility.yul\":4315:4318   */\n      dup9\n        /* \"#utility.yul\":4303:4313   */\n      dup3\n        /* \"#utility.yul\":4282:4319   */\n      tag_90\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4277:4280   */\n      dup5\n        /* \"#utility.yul\":4270:4320   */\n      mstore\n        /* \"#utility.yul\":4349:4353   */\n      0x20\n        /* \"#utility.yul\":4344:4347   */\n      dup5\n        /* \"#utility.yul\":4340:4354   */\n      add\n        /* \"#utility.yul\":4333:4354   */\n      swap4\n      pop\n        /* \"#utility.yul\":4220:4364   */\n      pop\n        /* \"#utility.yul\":4204:4208   */\n      0x20\n        /* \"#utility.yul\":4199:4202   */\n      dup2\n        /* \"#utility.yul\":4195:4209   */\n      add\n        /* \"#utility.yul\":4188:4209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4144:4364   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":4148:4169   */\n      pop\n        /* \"#utility.yul\":3762:4370   */\n      pop\n      pop\n        /* \"#utility.yul\":3660:4370   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4393:4763   */\n    tag_99:\n        /* \"#utility.yul\":4464:4469   */\n      0x00\n        /* \"#utility.yul\":4513:4516   */\n      dup3\n        /* \"#utility.yul\":4506:4510   */\n      0x1f\n        /* \"#utility.yul\":4498:4504   */\n      dup4\n        /* \"#utility.yul\":4494:4511   */\n      add\n        /* \"#utility.yul\":4490:4517   */\n      slt\n        /* \"#utility.yul\":4480:4602   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":4521:4600   */\n      tag_163\n      tag_91\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4480:4602   */\n    tag_162:\n        /* \"#utility.yul\":4638:4644   */\n      dup2\n        /* \"#utility.yul\":4625:4645   */\n      calldataload\n        /* \"#utility.yul\":4663:4757   */\n      tag_164\n        /* \"#utility.yul\":4753:4756   */\n      dup5\n        /* \"#utility.yul\":4745:4751   */\n      dup3\n        /* \"#utility.yul\":4738:4742   */\n      0x20\n        /* \"#utility.yul\":4730:4736   */\n      dup7\n        /* \"#utility.yul\":4726:4743   */\n      add\n        /* \"#utility.yul\":4663:4757   */\n      tag_98\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4654:4757   */\n      swap2\n      pop\n        /* \"#utility.yul\":4470:4763   */\n      pop\n        /* \"#utility.yul\":4393:4763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4769:5308   */\n    tag_26:\n        /* \"#utility.yul\":4853:4859   */\n      0x00\n        /* \"#utility.yul\":4902:4904   */\n      0x20\n        /* \"#utility.yul\":4890:4899   */\n      dup3\n        /* \"#utility.yul\":4881:4888   */\n      dup5\n        /* \"#utility.yul\":4877:4900   */\n      sub\n        /* \"#utility.yul\":4873:4905   */\n      slt\n        /* \"#utility.yul\":4870:4989   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":4908:4987   */\n      tag_167\n      tag_83\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4870:4989   */\n    tag_166:\n        /* \"#utility.yul\":5056:5057   */\n      0x00\n        /* \"#utility.yul\":5045:5054   */\n      dup3\n        /* \"#utility.yul\":5041:5058   */\n      add\n        /* \"#utility.yul\":5028:5059   */\n      calldataload\n        /* \"#utility.yul\":5086:5104   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5078:5084   */\n      dup2\n        /* \"#utility.yul\":5075:5105   */\n      gt\n        /* \"#utility.yul\":5072:5189   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":5108:5187   */\n      tag_169\n      tag_84\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5072:5189   */\n    tag_168:\n        /* \"#utility.yul\":5213:5291   */\n      tag_170\n        /* \"#utility.yul\":5283:5290   */\n      dup5\n        /* \"#utility.yul\":5274:5280   */\n      dup3\n        /* \"#utility.yul\":5263:5272   */\n      dup6\n        /* \"#utility.yul\":5259:5281   */\n      add\n        /* \"#utility.yul\":5213:5291   */\n      tag_99\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5203:5291   */\n      swap2\n      pop\n        /* \"#utility.yul\":4999:5301   */\n      pop\n        /* \"#utility.yul\":4769:5308   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5933   */\n    tag_31:\n        /* \"#utility.yul\":5391:5397   */\n      0x00\n        /* \"#utility.yul\":5399:5405   */\n      dup1\n        /* \"#utility.yul\":5407:5413   */\n      0x00\n        /* \"#utility.yul\":5456:5458   */\n      0x60\n        /* \"#utility.yul\":5444:5453   */\n      dup5\n        /* \"#utility.yul\":5435:5442   */\n      dup7\n        /* \"#utility.yul\":5431:5454   */\n      sub\n        /* \"#utility.yul\":5427:5459   */\n      slt\n        /* \"#utility.yul\":5424:5543   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":5462:5541   */\n      tag_173\n      tag_83\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5424:5543   */\n    tag_172:\n        /* \"#utility.yul\":5582:5583   */\n      0x00\n        /* \"#utility.yul\":5607:5660   */\n      tag_174\n        /* \"#utility.yul\":5652:5659   */\n      dup7\n        /* \"#utility.yul\":5643:5649   */\n      dup3\n        /* \"#utility.yul\":5632:5641   */\n      dup8\n        /* \"#utility.yul\":5628:5650   */\n      add\n        /* \"#utility.yul\":5607:5660   */\n      tag_88\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5597:5660   */\n      swap4\n      pop\n        /* \"#utility.yul\":5553:5670   */\n      pop\n        /* \"#utility.yul\":5709:5711   */\n      0x20\n        /* \"#utility.yul\":5735:5788   */\n      tag_175\n        /* \"#utility.yul\":5780:5787   */\n      dup7\n        /* \"#utility.yul\":5771:5777   */\n      dup3\n        /* \"#utility.yul\":5760:5769   */\n      dup8\n        /* \"#utility.yul\":5756:5778   */\n      add\n        /* \"#utility.yul\":5735:5788   */\n      tag_88\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5725:5788   */\n      swap3\n      pop\n        /* \"#utility.yul\":5680:5798   */\n      pop\n        /* \"#utility.yul\":5837:5839   */\n      0x40\n        /* \"#utility.yul\":5863:5916   */\n      tag_176\n        /* \"#utility.yul\":5908:5915   */\n      dup7\n        /* \"#utility.yul\":5899:5905   */\n      dup3\n        /* \"#utility.yul\":5888:5897   */\n      dup8\n        /* \"#utility.yul\":5884:5906   */\n      add\n        /* \"#utility.yul\":5863:5916   */\n      tag_90\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5853:5916   */\n      swap2\n      pop\n        /* \"#utility.yul\":5808:5926   */\n      pop\n        /* \"#utility.yul\":5314:5933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5939:6108   */\n    tag_100:\n        /* \"#utility.yul\":6023:6034   */\n      0x00\n        /* \"#utility.yul\":6057:6063   */\n      dup3\n        /* \"#utility.yul\":6052:6055   */\n      dup3\n        /* \"#utility.yul\":6045:6064   */\n      mstore\n        /* \"#utility.yul\":6097:6101   */\n      0x20\n        /* \"#utility.yul\":6092:6095   */\n      dup3\n        /* \"#utility.yul\":6088:6102   */\n      add\n        /* \"#utility.yul\":6073:6102   */\n      swap1\n      pop\n        /* \"#utility.yul\":5939:6108   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6114:6296   */\n    tag_101:\n        /* \"#utility.yul\":6254:6288   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":6250:6251   */\n      0x00\n        /* \"#utility.yul\":6242:6248   */\n      dup3\n        /* \"#utility.yul\":6238:6252   */\n      add\n        /* \"#utility.yul\":6231:6289   */\n      mstore\n        /* \"#utility.yul\":6114:6296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6302:6668   */\n    tag_102:\n        /* \"#utility.yul\":6444:6447   */\n      0x00\n        /* \"#utility.yul\":6465:6532   */\n      tag_180\n        /* \"#utility.yul\":6529:6531   */\n      0x20\n        /* \"#utility.yul\":6524:6527   */\n      dup4\n        /* \"#utility.yul\":6465:6532   */\n      tag_100\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6458:6532   */\n      swap2\n      pop\n        /* \"#utility.yul\":6541:6634   */\n      tag_181\n        /* \"#utility.yul\":6630:6633   */\n      dup3\n        /* \"#utility.yul\":6541:6634   */\n      tag_101\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6659:6661   */\n      0x20\n        /* \"#utility.yul\":6654:6657   */\n      dup3\n        /* \"#utility.yul\":6650:6662   */\n      add\n        /* \"#utility.yul\":6643:6662   */\n      swap1\n      pop\n        /* \"#utility.yul\":6302:6668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6674:7093   */\n    tag_42:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6878:6880   */\n      0x20\n        /* \"#utility.yul\":6867:6876   */\n      dup3\n        /* \"#utility.yul\":6863:6881   */\n      add\n        /* \"#utility.yul\":6855:6881   */\n      swap1\n      pop\n        /* \"#utility.yul\":6927:6936   */\n      dup2\n        /* \"#utility.yul\":6921:6925   */\n      dup2\n        /* \"#utility.yul\":6917:6937   */\n      sub\n        /* \"#utility.yul\":6913:6914   */\n      0x00\n        /* \"#utility.yul\":6902:6911   */\n      dup4\n        /* \"#utility.yul\":6898:6915   */\n      add\n        /* \"#utility.yul\":6891:6938   */\n      mstore\n        /* \"#utility.yul\":6955:7086   */\n      tag_183\n        /* \"#utility.yul\":7081:7085   */\n      dup2\n        /* \"#utility.yul\":6955:7086   */\n      tag_102\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6947:7086   */\n      swap1\n      pop\n        /* \"#utility.yul\":6674:7093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7099:7279   */\n    tag_103:\n        /* \"#utility.yul\":7147:7224   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7144:7145   */\n      0x00\n        /* \"#utility.yul\":7137:7225   */\n      mstore\n        /* \"#utility.yul\":7244:7248   */\n      0x11\n        /* \"#utility.yul\":7241:7242   */\n      0x04\n        /* \"#utility.yul\":7234:7249   */\n      mstore\n        /* \"#utility.yul\":7268:7272   */\n      0x24\n        /* \"#utility.yul\":7265:7266   */\n      0x00\n        /* \"#utility.yul\":7258:7273   */\n      revert\n        /* \"#utility.yul\":7285:7476   */\n    tag_44:\n        /* \"#utility.yul\":7325:7328   */\n      0x00\n        /* \"#utility.yul\":7344:7364   */\n      tag_186\n        /* \"#utility.yul\":7362:7363   */\n      dup3\n        /* \"#utility.yul\":7344:7364   */\n      tag_80\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7339:7364   */\n      swap2\n      pop\n        /* \"#utility.yul\":7378:7398   */\n      tag_187\n        /* \"#utility.yul\":7396:7397   */\n      dup4\n        /* \"#utility.yul\":7378:7398   */\n      tag_80\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7373:7398   */\n      swap3\n      pop\n        /* \"#utility.yul\":7421:7422   */\n      dup3\n        /* \"#utility.yul\":7418:7419   */\n      dup3\n        /* \"#utility.yul\":7414:7423   */\n      add\n        /* \"#utility.yul\":7407:7423   */\n      swap1\n      pop\n        /* \"#utility.yul\":7442:7445   */\n      dup1\n        /* \"#utility.yul\":7439:7440   */\n      dup3\n        /* \"#utility.yul\":7436:7446   */\n      gt\n        /* \"#utility.yul\":7433:7469   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":7449:7467   */\n      tag_189\n      tag_103\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":7433:7469   */\n    tag_188:\n        /* \"#utility.yul\":7285:7476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7482:7662   */\n    tag_52:\n        /* \"#utility.yul\":7530:7607   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7527:7528   */\n      0x00\n        /* \"#utility.yul\":7520:7608   */\n      mstore\n        /* \"#utility.yul\":7627:7631   */\n      0x32\n        /* \"#utility.yul\":7624:7625   */\n      0x04\n        /* \"#utility.yul\":7617:7632   */\n      mstore\n        /* \"#utility.yul\":7651:7655   */\n      0x24\n        /* \"#utility.yul\":7648:7649   */\n      0x00\n        /* \"#utility.yul\":7641:7656   */\n      revert\n        /* \"#utility.yul\":7668:8078   */\n    tag_57:\n        /* \"#utility.yul\":7708:7715   */\n      0x00\n        /* \"#utility.yul\":7731:7751   */\n      tag_192\n        /* \"#utility.yul\":7749:7750   */\n      dup3\n        /* \"#utility.yul\":7731:7751   */\n      tag_80\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7726:7751   */\n      swap2\n      pop\n        /* \"#utility.yul\":7765:7785   */\n      tag_193\n        /* \"#utility.yul\":7783:7784   */\n      dup4\n        /* \"#utility.yul\":7765:7785   */\n      tag_80\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7760:7785   */\n      swap3\n      pop\n        /* \"#utility.yul\":7820:7821   */\n      dup3\n        /* \"#utility.yul\":7817:7818   */\n      dup3\n        /* \"#utility.yul\":7813:7822   */\n      mul\n        /* \"#utility.yul\":7842:7872   */\n      tag_194\n        /* \"#utility.yul\":7860:7871   */\n      dup2\n        /* \"#utility.yul\":7842:7872   */\n      tag_80\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7831:7872   */\n      swap2\n      pop\n        /* \"#utility.yul\":8021:8022   */\n      dup3\n        /* \"#utility.yul\":8012:8019   */\n      dup3\n        /* \"#utility.yul\":8008:8023   */\n      div\n        /* \"#utility.yul\":8005:8006   */\n      dup5\n        /* \"#utility.yul\":8002:8024   */\n      eq\n        /* \"#utility.yul\":7982:7983   */\n      dup4\n        /* \"#utility.yul\":7975:7984   */\n      iszero\n        /* \"#utility.yul\":7955:8038   */\n      or\n        /* \"#utility.yul\":7932:8071   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":8051:8069   */\n      tag_196\n      tag_103\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7932:8071   */\n    tag_195:\n        /* \"#utility.yul\":7716:8078   */\n      pop\n        /* \"#utility.yul\":7668:8078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8084:8264   */\n    tag_104:\n        /* \"#utility.yul\":8132:8209   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8129:8130   */\n      0x00\n        /* \"#utility.yul\":8122:8210   */\n      mstore\n        /* \"#utility.yul\":8229:8233   */\n      0x12\n        /* \"#utility.yul\":8226:8227   */\n      0x04\n        /* \"#utility.yul\":8219:8234   */\n      mstore\n        /* \"#utility.yul\":8253:8257   */\n      0x24\n        /* \"#utility.yul\":8250:8251   */\n      0x00\n        /* \"#utility.yul\":8243:8258   */\n      revert\n        /* \"#utility.yul\":8270:8455   */\n    tag_64:\n        /* \"#utility.yul\":8310:8311   */\n      0x00\n        /* \"#utility.yul\":8327:8347   */\n      tag_199\n        /* \"#utility.yul\":8345:8346   */\n      dup3\n        /* \"#utility.yul\":8327:8347   */\n      tag_80\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8322:8347   */\n      swap2\n      pop\n        /* \"#utility.yul\":8361:8381   */\n      tag_200\n        /* \"#utility.yul\":8379:8380   */\n      dup4\n        /* \"#utility.yul\":8361:8381   */\n      tag_80\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8356:8381   */\n      swap3\n      pop\n        /* \"#utility.yul\":8400:8401   */\n      dup3\n        /* \"#utility.yul\":8390:8425   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":8405:8423   */\n      tag_202\n      tag_104\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8390:8425   */\n    tag_201:\n        /* \"#utility.yul\":8447:8448   */\n      dup3\n        /* \"#utility.yul\":8444:8445   */\n      dup3\n        /* \"#utility.yul\":8440:8449   */\n      div\n        /* \"#utility.yul\":8435:8449   */\n      swap1\n      pop\n        /* \"#utility.yul\":8270:8455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8461:8655   */\n    tag_72:\n        /* \"#utility.yul\":8501:8505   */\n      0x00\n        /* \"#utility.yul\":8521:8541   */\n      tag_204\n        /* \"#utility.yul\":8539:8540   */\n      dup3\n        /* \"#utility.yul\":8521:8541   */\n      tag_80\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8516:8541   */\n      swap2\n      pop\n        /* \"#utility.yul\":8555:8575   */\n      tag_205\n        /* \"#utility.yul\":8573:8574   */\n      dup4\n        /* \"#utility.yul\":8555:8575   */\n      tag_80\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8550:8575   */\n      swap3\n      pop\n        /* \"#utility.yul\":8599:8600   */\n      dup3\n        /* \"#utility.yul\":8596:8597   */\n      dup3\n        /* \"#utility.yul\":8592:8601   */\n      sub\n        /* \"#utility.yul\":8584:8601   */\n      swap1\n      pop\n        /* \"#utility.yul\":8623:8624   */\n      dup2\n        /* \"#utility.yul\":8617:8621   */\n      dup2\n        /* \"#utility.yul\":8614:8625   */\n      gt\n        /* \"#utility.yul\":8611:8648   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":8628:8646   */\n      tag_207\n      tag_103\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8611:8648   */\n    tag_206:\n        /* \"#utility.yul\":8461:8655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8661:8831   */\n    tag_105:\n        /* \"#utility.yul\":8801:8823   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":8797:8798   */\n      0x00\n        /* \"#utility.yul\":8789:8795   */\n      dup3\n        /* \"#utility.yul\":8785:8799   */\n      add\n        /* \"#utility.yul\":8778:8824   */\n      mstore\n        /* \"#utility.yul\":8661:8831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8837:9203   */\n    tag_106:\n        /* \"#utility.yul\":8979:8982   */\n      0x00\n        /* \"#utility.yul\":9000:9067   */\n      tag_210\n        /* \"#utility.yul\":9064:9066   */\n      0x14\n        /* \"#utility.yul\":9059:9062   */\n      dup4\n        /* \"#utility.yul\":9000:9067   */\n      tag_100\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8993:9067   */\n      swap2\n      pop\n        /* \"#utility.yul\":9076:9169   */\n      tag_211\n        /* \"#utility.yul\":9165:9168   */\n      dup3\n        /* \"#utility.yul\":9076:9169   */\n      tag_105\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":9194:9196   */\n      0x20\n        /* \"#utility.yul\":9189:9192   */\n      dup3\n        /* \"#utility.yul\":9185:9197   */\n      add\n        /* \"#utility.yul\":9178:9197   */\n      swap1\n      pop\n        /* \"#utility.yul\":8837:9203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9209:9628   */\n    tag_76:\n        /* \"#utility.yul\":9375:9379   */\n      0x00\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"#utility.yul\":9402:9411   */\n      dup3\n        /* \"#utility.yul\":9398:9416   */\n      add\n        /* \"#utility.yul\":9390:9416   */\n      swap1\n      pop\n        /* \"#utility.yul\":9462:9471   */\n      dup2\n        /* \"#utility.yul\":9456:9460   */\n      dup2\n        /* \"#utility.yul\":9452:9472   */\n      sub\n        /* \"#utility.yul\":9448:9449   */\n      0x00\n        /* \"#utility.yul\":9437:9446   */\n      dup4\n        /* \"#utility.yul\":9433:9450   */\n      add\n        /* \"#utility.yul\":9426:9473   */\n      mstore\n        /* \"#utility.yul\":9490:9621   */\n      tag_213\n        /* \"#utility.yul\":9616:9620   */\n      dup2\n        /* \"#utility.yul\":9490:9621   */\n      tag_106\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9482:9621   */\n      swap1\n      pop\n        /* \"#utility.yul\":9209:9628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220effd03aff9c007f1dd51e8370850ab75a5f3bfde05cdd551612d70eeb1faa65364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 68,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 64,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 77,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1048:6",
										"nodeType": "YulBlock",
										"src": "0:1048:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "608:80:6",
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nativeSrc": "618:22:6",
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nativeSrc": "627:13:6",
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nativeSrc": "649:33:6",
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nativeSrc": "649:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:6",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:6",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:6",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nativeSrc": "771:274:6",
													"nodeType": "YulBlock",
													"src": "771:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:6",
																"nodeType": "YulBlock",
																"src": "817:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:6"
																			},
																			"nativeSrc": "819:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:6"
																		},
																		"nativeSrc": "819:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:6"
																		},
																		"nativeSrc": "788:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:6",
																		"nodeType": "YulLiteral",
																		"src": "813:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:6"
																},
																"nativeSrc": "784:32:6",
																"nodeType": "YulFunctionCall",
																"src": "784:32:6"
															},
															"nativeSrc": "781:119:6",
															"nodeType": "YulIf",
															"src": "781:119:6"
														},
														{
															"nativeSrc": "910:128:6",
															"nodeType": "YulBlock",
															"src": "910:128:6",
															"statements": [
																{
																	"nativeSrc": "925:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:6",
																		"nodeType": "YulLiteral",
																		"src": "939:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:6",
																			"nodeType": "YulTypedName",
																			"src": "929:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:6",
																	"nodeType": "YulAssignment",
																	"src": "954:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:6"
																				},
																				"nativeSrc": "996:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:6"
																		},
																		"nativeSrc": "964:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:6",
														"nodeType": "YulTypedName",
														"src": "741:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:6",
														"nodeType": "YulTypedName",
														"src": "752:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:6",
														"nodeType": "YulTypedName",
														"src": "764:6:6",
														"type": ""
													}
												],
												"src": "694:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50604051610b29380380610b298339818101604052810190602e91906072565b805f819055505f600181905550506098565b5f80fd5b5f819050919050565b6054816044565b8114605d575f80fd5b50565b5f81519050606c81604d565b92915050565b5f6020828403121560845760836040565b5b5f608f848285016060565b91505092915050565b610a84806100a55f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c80635cd1d31d116100595780635cd1d31d146100e9578063df791e5014610119578063f3fef3a314610135578063f446c1d0146101515761007b565b80630f529ba21461007f57806347e7ef241461009d578063523fba7f146100b9575b5f80fd5b61008761016f565b6040516100949190610512565b60405180910390f35b6100b760048036038101906100b291906105c0565b610175565b005b6100d360048036038101906100ce91906105fe565b610226565b6040516100e09190610512565b60405180910390f35b61010360048036038101906100fe9190610779565b61023b565b6040516101109190610512565b60405180910390f35b610133600480360381019061012e91906107c0565b610303565b005b61014f600480360381019061014a91906105c0565b6103fd565b005b6101596104ec565b6040516101669190610512565b60405180910390f35b60015481565b5f81116101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae9061086a565b60405180910390fd5b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020391906108b5565b925050819055508060015f82825461021b91906108b5565b925050819055505050565b6002602052805f5260405f205f915090505481565b5f805f90505f600190505f5b84518110156102ad57848181518110610263576102626108e8565b5b60200260200101518361027691906108b5565b925084818151811061028b5761028a6108e8565b5b60200260200101518261029e9190610915565b91508080600101915050610247565b505f8160046102bc9190610915565b835f546102c99190610915565b8460025f546102d89190610915565b6102e29190610915565b6102ec91906108b5565b6102f69190610983565b9050809350505050919050565b5f8111610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033c9061086a565b60405180910390fd5b5f61034f826104f1565b90508160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461039d91906108b5565b925050819055508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103f091906109b3565b9250508190555050505050565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610a30565b60405180910390fd5b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104c991906109b3565b925050819055508060015f8282546104e191906109b3565b925050819055505050565b5f5481565b5f819050919050565b5f819050919050565b61050c816104fa565b82525050565b5f6020820190506105255f830184610503565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105658261053c565b9050919050565b6105758161055b565b811461057f575f80fd5b50565b5f813590506105908161056c565b92915050565b61059f816104fa565b81146105a9575f80fd5b50565b5f813590506105ba81610596565b92915050565b5f80604083850312156105d6576105d5610534565b5b5f6105e385828601610582565b92505060206105f4858286016105ac565b9150509250929050565b5f6020828403121561061357610612610534565b5b5f61062084828501610582565b91505092915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106738261062d565b810181811067ffffffffffffffff821117156106925761069161063d565b5b80604052505050565b5f6106a461052b565b90506106b0828261066a565b919050565b5f67ffffffffffffffff8211156106cf576106ce61063d565b5b602082029050602081019050919050565b5f80fd5b5f6106f66106f1846106b5565b61069b565b90508083825260208201905060208402830185811115610719576107186106e0565b5b835b81811015610742578061072e88826105ac565b84526020840193505060208101905061071b565b5050509392505050565b5f82601f8301126107605761075f610629565b5b81356107708482602086016106e4565b91505092915050565b5f6020828403121561078e5761078d610534565b5b5f82013567ffffffffffffffff8111156107ab576107aa610538565b5b6107b78482850161074c565b91505092915050565b5f805f606084860312156107d7576107d6610534565b5b5f6107e486828701610582565b93505060206107f586828701610582565b9250506040610806868287016105ac565b9150509250925092565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f610854602083610810565b915061085f82610820565b602082019050919050565b5f6020820190508181035f83015261088181610848565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108bf826104fa565b91506108ca836104fa565b92508282019050808211156108e2576108e1610888565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61091f826104fa565b915061092a836104fa565b9250828202610938816104fa565b9150828204841483151761094f5761094e610888565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61098d826104fa565b9150610998836104fa565b9250826109a8576109a7610956565b5b828204905092915050565b5f6109bd826104fa565b91506109c8836104fa565b92508282039050818111156109e0576109df610888565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610a1a601483610810565b9150610a25826109e6565b602082019050919050565b5f6020820190508181035f830152610a4781610a0e565b905091905056fea2646970667358221220effd03aff9c007f1dd51e8370850ab75a5f3bfde05cdd551612d70eeb1faa65364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB29 CODESIZE SUB DUP1 PUSH2 0xB29 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH1 0x2E SWAP2 SWAP1 PUSH1 0x72 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH1 0x98 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x54 DUP2 PUSH1 0x44 JUMP JUMPDEST DUP2 EQ PUSH1 0x5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH1 0x6C DUP2 PUSH1 0x4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x84 JUMPI PUSH1 0x83 PUSH1 0x40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x8F DUP5 DUP3 DUP6 ADD PUSH1 0x60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA84 DUP1 PUSH2 0xA5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5CD1D31D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x5CD1D31D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xF446C1D0 EQ PUSH2 0x151 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xF529BA2 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2AD JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x263 JUMPI PUSH2 0x262 PUSH2 0x8E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x28B JUMPI PUSH2 0x28A PUSH2 0x8E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x247 JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x4 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST DUP4 PUSH0 SLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH0 SLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x34F DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP1 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50C DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x525 PUSH0 DUP4 ADD DUP5 PUSH2 0x503 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x565 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x575 DUP2 PUSH2 0x55B JUMP JUMPDEST DUP2 EQ PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x590 DUP2 PUSH2 0x56C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59F DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP2 EQ PUSH2 0x5A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BA DUP2 PUSH2 0x596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E3 DUP6 DUP3 DUP7 ADD PUSH2 0x582 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5F4 DUP6 DUP3 DUP7 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x613 JUMPI PUSH2 0x612 PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x620 DUP5 DUP3 DUP6 ADD PUSH2 0x582 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x673 DUP3 PUSH2 0x62D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6A4 PUSH2 0x52B JUMP JUMPDEST SWAP1 POP PUSH2 0x6B0 DUP3 DUP3 PUSH2 0x66A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x6F6 PUSH2 0x6F1 DUP5 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0x6E0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x742 JUMPI DUP1 PUSH2 0x72E DUP9 DUP3 PUSH2 0x5AC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x71B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x629 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x770 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x7AA PUSH2 0x538 JUMP JUMPDEST JUMPDEST PUSH2 0x7B7 DUP5 DUP3 DUP6 ADD PUSH2 0x74C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7D6 PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E4 DUP7 DUP3 DUP8 ADD PUSH2 0x582 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x7F5 DUP7 DUP3 DUP8 ADD PUSH2 0x582 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x806 DUP7 DUP3 DUP8 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH1 0x20 DUP4 PUSH2 0x810 JUMP JUMPDEST SWAP2 POP PUSH2 0x85F DUP3 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x881 DUP2 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8BF DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x8CA DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8E2 JUMPI PUSH2 0x8E1 PUSH2 0x888 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x91F DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x92A DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x938 DUP2 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x94F JUMPI PUSH2 0x94E PUSH2 0x888 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x98D DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x998 DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0x956 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x9C8 DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9E0 JUMPI PUSH2 0x9DF PUSH2 0x888 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA1A PUSH1 0x14 DUP4 PUSH2 0x810 JUMP JUMPDEST SWAP2 POP PUSH2 0xA25 DUP3 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA47 DUP2 PUSH2 0xA0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF REVERT SUB 0xAF 0xF9 0xC0 SMOD CALL 0xDD MLOAD 0xE8 CALLDATACOPY ADDMOD POP 0xAB PUSH22 0xA5F3BFDE05CDD551612D70EEB1FAA65364736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "115:1494:5:-:0;;;243:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;281:2;277:1;:6;;;;297:1;293;:5;;;;243:62;115:1494;;88:117:6;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;115:1494:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@A_790": {
									"entryPoint": 1260,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@D_792": {
									"entryPoint": 367,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateInvariant_924": {
									"entryPoint": 571,
									"id": 924,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculatePriceImpact_969": {
									"entryPoint": 1265,
									"id": 969,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deposit_835": {
									"entryPoint": 373,
									"id": 835,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swap_959": {
									"entryPoint": 771,
									"id": 959,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenBalances_796": {
									"entryPoint": 550,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_862": {
									"entryPoint": 1021,
									"id": 862,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9631:6",
										"nodeType": "YulBlock",
										"src": "0:9631:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:6",
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nativeSrc": "62:16:6",
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:6",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nativeSrc": "155:53:6",
													"nodeType": "YulBlock",
													"src": "155:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:6"
																		},
																		"nativeSrc": "177:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:6"
																},
																"nativeSrc": "165:37:6",
																"nodeType": "YulFunctionCall",
																"src": "165:37:6"
															},
															"nativeSrc": "165:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:6",
														"nodeType": "YulTypedName",
														"src": "143:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:6",
														"nodeType": "YulTypedName",
														"src": "150:3:6",
														"type": ""
													}
												],
												"src": "90:118:6"
											},
											{
												"body": {
													"nativeSrc": "312:124:6",
													"nodeType": "YulBlock",
													"src": "312:124:6",
													"statements": [
														{
															"nativeSrc": "322:26:6",
															"nodeType": "YulAssignment",
															"src": "322:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:6",
																		"nodeType": "YulLiteral",
																		"src": "345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:6"
																},
																"nativeSrc": "330:18:6",
																"nodeType": "YulFunctionCall",
																"src": "330:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:6",
																				"nodeType": "YulLiteral",
																				"src": "426:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nativeSrc": "411:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:6"
																},
																"nativeSrc": "358:71:6",
																"nodeType": "YulFunctionCall",
																"src": "358:71:6"
															},
															"nativeSrc": "358:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:6",
														"nodeType": "YulTypedName",
														"src": "284:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:6",
														"nodeType": "YulTypedName",
														"src": "296:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:6",
														"nodeType": "YulTypedName",
														"src": "307:4:6",
														"type": ""
													}
												],
												"src": "214:222:6"
											},
											{
												"body": {
													"nativeSrc": "482:35:6",
													"nodeType": "YulBlock",
													"src": "482:35:6",
													"statements": [
														{
															"nativeSrc": "492:19:6",
															"nodeType": "YulAssignment",
															"src": "492:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:6",
																		"nodeType": "YulLiteral",
																		"src": "508:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:6"
																},
																"nativeSrc": "502:9:6",
																"nodeType": "YulFunctionCall",
																"src": "502:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:6",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													}
												],
												"src": "442:75:6"
											},
											{
												"body": {
													"nativeSrc": "612:28:6",
													"nodeType": "YulBlock",
													"src": "612:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:6",
																		"nodeType": "YulLiteral",
																		"src": "629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:6",
																		"nodeType": "YulLiteral",
																		"src": "632:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:6"
																},
																"nativeSrc": "622:12:6",
																"nodeType": "YulFunctionCall",
																"src": "622:12:6"
															},
															"nativeSrc": "622:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:6"
											},
											{
												"body": {
													"nativeSrc": "735:28:6",
													"nodeType": "YulBlock",
													"src": "735:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:6",
																		"nodeType": "YulLiteral",
																		"src": "752:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:6",
																		"nodeType": "YulLiteral",
																		"src": "755:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:6"
																},
																"nativeSrc": "745:12:6",
																"nodeType": "YulFunctionCall",
																"src": "745:12:6"
															},
															"nativeSrc": "745:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:6"
											},
											{
												"body": {
													"nativeSrc": "814:81:6",
													"nodeType": "YulBlock",
													"src": "814:81:6",
													"statements": [
														{
															"nativeSrc": "824:65:6",
															"nodeType": "YulAssignment",
															"src": "824:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:6",
																		"nodeType": "YulLiteral",
																		"src": "846:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:6"
																},
																"nativeSrc": "835:54:6",
																"nodeType": "YulFunctionCall",
																"src": "835:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:6",
														"nodeType": "YulTypedName",
														"src": "796:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:6",
														"nodeType": "YulTypedName",
														"src": "806:7:6",
														"type": ""
													}
												],
												"src": "769:126:6"
											},
											{
												"body": {
													"nativeSrc": "946:51:6",
													"nodeType": "YulBlock",
													"src": "946:51:6",
													"statements": [
														{
															"nativeSrc": "956:35:6",
															"nodeType": "YulAssignment",
															"src": "956:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:6"
																},
																"nativeSrc": "967:24:6",
																"nodeType": "YulFunctionCall",
																"src": "967:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:6",
														"nodeType": "YulTypedName",
														"src": "928:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:6",
														"nodeType": "YulTypedName",
														"src": "938:7:6",
														"type": ""
													}
												],
												"src": "901:96:6"
											},
											{
												"body": {
													"nativeSrc": "1046:79:6",
													"nodeType": "YulBlock",
													"src": "1046:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:6",
																"nodeType": "YulBlock",
																"src": "1103:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:6"
																			},
																			"nativeSrc": "1105:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:6"
																		},
																		"nativeSrc": "1105:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:6"
																				},
																				"nativeSrc": "1076:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:6"
																		},
																		"nativeSrc": "1066:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:6"
																},
																"nativeSrc": "1059:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:6"
															},
															"nativeSrc": "1056:63:6",
															"nodeType": "YulIf",
															"src": "1056:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:6",
														"nodeType": "YulTypedName",
														"src": "1039:5:6",
														"type": ""
													}
												],
												"src": "1003:122:6"
											},
											{
												"body": {
													"nativeSrc": "1183:87:6",
													"nodeType": "YulBlock",
													"src": "1183:87:6",
													"statements": [
														{
															"nativeSrc": "1193:29:6",
															"nodeType": "YulAssignment",
															"src": "1193:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:6"
																},
																"nativeSrc": "1202:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:6"
																},
																"nativeSrc": "1231:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:6"
															},
															"nativeSrc": "1231:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:6",
														"nodeType": "YulTypedName",
														"src": "1161:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:6",
														"nodeType": "YulTypedName",
														"src": "1169:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:6",
														"nodeType": "YulTypedName",
														"src": "1177:5:6",
														"type": ""
													}
												],
												"src": "1131:139:6"
											},
											{
												"body": {
													"nativeSrc": "1319:79:6",
													"nodeType": "YulBlock",
													"src": "1319:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:6",
																"nodeType": "YulBlock",
																"src": "1376:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:6"
																			},
																			"nativeSrc": "1378:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:6"
																		},
																		"nativeSrc": "1378:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:6"
																				},
																				"nativeSrc": "1349:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:6"
																		},
																		"nativeSrc": "1339:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:6"
																},
																"nativeSrc": "1332:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:6"
															},
															"nativeSrc": "1329:63:6",
															"nodeType": "YulIf",
															"src": "1329:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													}
												],
												"src": "1276:122:6"
											},
											{
												"body": {
													"nativeSrc": "1456:87:6",
													"nodeType": "YulBlock",
													"src": "1456:87:6",
													"statements": [
														{
															"nativeSrc": "1466:29:6",
															"nodeType": "YulAssignment",
															"src": "1466:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:6"
																},
																"nativeSrc": "1475:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:6"
																},
																"nativeSrc": "1504:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:6"
															},
															"nativeSrc": "1504:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:6",
														"nodeType": "YulTypedName",
														"src": "1434:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:6",
														"nodeType": "YulTypedName",
														"src": "1442:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:6",
														"nodeType": "YulTypedName",
														"src": "1450:5:6",
														"type": ""
													}
												],
												"src": "1404:139:6"
											},
											{
												"body": {
													"nativeSrc": "1632:391:6",
													"nodeType": "YulBlock",
													"src": "1632:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1678:83:6",
																"nodeType": "YulBlock",
																"src": "1678:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1680:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:6"
																			},
																			"nativeSrc": "1680:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:6"
																		},
																		"nativeSrc": "1680:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1653:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1649:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:6"
																		},
																		"nativeSrc": "1649:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:6"
																},
																"nativeSrc": "1645:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1645:32:6"
															},
															"nativeSrc": "1642:119:6",
															"nodeType": "YulIf",
															"src": "1642:119:6"
														},
														{
															"nativeSrc": "1771:117:6",
															"nodeType": "YulBlock",
															"src": "1771:117:6",
															"statements": [
																{
																	"nativeSrc": "1786:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1800:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1790:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1815:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1815:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1850:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1861:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:6"
																				},
																				"nativeSrc": "1846:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1870:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1825:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:6"
																		},
																		"nativeSrc": "1825:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1815:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1898:118:6",
															"nodeType": "YulBlock",
															"src": "1898:118:6",
															"statements": [
																{
																	"nativeSrc": "1913:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1927:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1917:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:6"
																				},
																				"nativeSrc": "1974:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1953:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:6"
																		},
																		"nativeSrc": "1953:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1943:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1549:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:6",
														"nodeType": "YulTypedName",
														"src": "1594:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:6",
														"nodeType": "YulTypedName",
														"src": "1617:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1625:6:6",
														"nodeType": "YulTypedName",
														"src": "1625:6:6",
														"type": ""
													}
												],
												"src": "1549:474:6"
											},
											{
												"body": {
													"nativeSrc": "2095:263:6",
													"nodeType": "YulBlock",
													"src": "2095:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:6",
																"nodeType": "YulBlock",
																"src": "2141:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:6"
																			},
																			"nativeSrc": "2143:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:6"
																		},
																		"nativeSrc": "2143:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:6"
																		},
																		"nativeSrc": "2112:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:6"
																},
																"nativeSrc": "2108:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:6"
															},
															"nativeSrc": "2105:119:6",
															"nodeType": "YulIf",
															"src": "2105:119:6"
														},
														{
															"nativeSrc": "2234:117:6",
															"nodeType": "YulBlock",
															"src": "2234:117:6",
															"statements": [
																{
																	"nativeSrc": "2249:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:6"
																				},
																				"nativeSrc": "2309:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:6"
																		},
																		"nativeSrc": "2288:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2029:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:6",
														"nodeType": "YulTypedName",
														"src": "2065:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:6",
														"nodeType": "YulTypedName",
														"src": "2076:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:6",
														"nodeType": "YulTypedName",
														"src": "2088:6:6",
														"type": ""
													}
												],
												"src": "2029:329:6"
											},
											{
												"body": {
													"nativeSrc": "2453:28:6",
													"nodeType": "YulBlock",
													"src": "2453:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2470:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2473:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2473:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2463:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2463:6:6"
																},
																"nativeSrc": "2463:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2463:12:6"
															},
															"nativeSrc": "2463:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2463:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2364:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2364:117:6"
											},
											{
												"body": {
													"nativeSrc": "2535:54:6",
													"nodeType": "YulBlock",
													"src": "2535:54:6",
													"statements": [
														{
															"nativeSrc": "2545:38:6",
															"nodeType": "YulAssignment",
															"src": "2545:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2563:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2570:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2570:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2559:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:6"
																		},
																		"nativeSrc": "2559:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2559:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2579:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2579:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2575:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2575:3:6"
																		},
																		"nativeSrc": "2575:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2575:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:6"
																},
																"nativeSrc": "2555:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2555:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2487:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2518:5:6",
														"nodeType": "YulTypedName",
														"src": "2518:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2528:6:6",
														"nodeType": "YulTypedName",
														"src": "2528:6:6",
														"type": ""
													}
												],
												"src": "2487:102:6"
											},
											{
												"body": {
													"nativeSrc": "2623:152:6",
													"nodeType": "YulBlock",
													"src": "2623:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2640:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2640:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2643:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2643:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2633:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:6"
																},
																"nativeSrc": "2633:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2633:88:6"
															},
															"nativeSrc": "2633:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2633:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2737:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2737:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2740:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2740:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2730:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:6"
																},
																"nativeSrc": "2730:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2730:15:6"
															},
															"nativeSrc": "2730:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2730:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2761:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2761:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2764:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2764:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2754:6:6"
																},
																"nativeSrc": "2754:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2754:15:6"
															},
															"nativeSrc": "2754:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2754:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2595:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2595:180:6"
											},
											{
												"body": {
													"nativeSrc": "2824:238:6",
													"nodeType": "YulBlock",
													"src": "2824:238:6",
													"statements": [
														{
															"nativeSrc": "2834:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2834:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2856:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2886:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2886:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2864:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2864:21:6"
																		},
																		"nativeSrc": "2864:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2864:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2852:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:6"
																},
																"nativeSrc": "2852:40:6",
																"nodeType": "YulFunctionCall",
																"src": "2852:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2838:10:6",
																	"nodeType": "YulTypedName",
																	"src": "2838:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3003:22:6",
																"nodeType": "YulBlock",
																"src": "3003:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3005:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3005:16:6"
																			},
																			"nativeSrc": "3005:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3005:18:6"
																		},
																		"nativeSrc": "3005:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3005:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2946:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "2946:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2958:18:6",
																				"nodeType": "YulLiteral",
																				"src": "2958:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2943:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2943:2:6"
																		},
																		"nativeSrc": "2943:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2982:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "2982:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2994:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2994:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2979:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2979:2:6"
																		},
																		"nativeSrc": "2979:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2979:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2940:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2940:2:6"
																},
																"nativeSrc": "2940:62:6",
																"nodeType": "YulFunctionCall",
																"src": "2940:62:6"
															},
															"nativeSrc": "2937:88:6",
															"nodeType": "YulIf",
															"src": "2937:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3041:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3045:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "3045:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:6"
																},
																"nativeSrc": "3034:22:6",
																"nodeType": "YulFunctionCall",
																"src": "3034:22:6"
															},
															"nativeSrc": "3034:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "3034:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2781:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2810:6:6",
														"nodeType": "YulTypedName",
														"src": "2810:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2818:4:6",
														"nodeType": "YulTypedName",
														"src": "2818:4:6",
														"type": ""
													}
												],
												"src": "2781:281:6"
											},
											{
												"body": {
													"nativeSrc": "3109:88:6",
													"nodeType": "YulBlock",
													"src": "3109:88:6",
													"statements": [
														{
															"nativeSrc": "3119:30:6",
															"nodeType": "YulAssignment",
															"src": "3119:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "3129:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3129:18:6"
																},
																"nativeSrc": "3129:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3129:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3119:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3119:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3178:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3178:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "3186:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3186:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "3158:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "3158:19:6"
																},
																"nativeSrc": "3158:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3158:33:6"
															},
															"nativeSrc": "3158:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3158:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3068:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3093:4:6",
														"nodeType": "YulTypedName",
														"src": "3093:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3102:6:6",
														"nodeType": "YulTypedName",
														"src": "3102:6:6",
														"type": ""
													}
												],
												"src": "3068:129:6"
											},
											{
												"body": {
													"nativeSrc": "3285:229:6",
													"nodeType": "YulBlock",
													"src": "3285:229:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3390:22:6",
																"nodeType": "YulBlock",
																"src": "3390:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3392:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3392:16:6"
																			},
																			"nativeSrc": "3392:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3392:18:6"
																		},
																		"nativeSrc": "3392:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3392:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3362:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3362:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3370:18:6",
																		"nodeType": "YulLiteral",
																		"src": "3370:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3359:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3359:2:6"
																},
																"nativeSrc": "3359:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3359:30:6"
															},
															"nativeSrc": "3356:56:6",
															"nodeType": "YulIf",
															"src": "3356:56:6"
														},
														{
															"nativeSrc": "3422:25:6",
															"nodeType": "YulAssignment",
															"src": "3422:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3434:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3434:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3442:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3442:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3430:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3430:3:6"
																},
																"nativeSrc": "3430:17:6",
																"nodeType": "YulFunctionCall",
																"src": "3430:17:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3422:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3422:4:6"
																}
															]
														},
														{
															"nativeSrc": "3484:23:6",
															"nodeType": "YulAssignment",
															"src": "3484:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3496:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3496:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3502:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3502:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3492:3:6"
																},
																"nativeSrc": "3492:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3492:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3484:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3484:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3203:311:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3269:6:6",
														"nodeType": "YulTypedName",
														"src": "3269:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3280:4:6",
														"nodeType": "YulTypedName",
														"src": "3280:4:6",
														"type": ""
													}
												],
												"src": "3203:311:6"
											},
											{
												"body": {
													"nativeSrc": "3609:28:6",
													"nodeType": "YulBlock",
													"src": "3609:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3626:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3629:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3619:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:6"
																},
																"nativeSrc": "3619:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3619:12:6"
															},
															"nativeSrc": "3619:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "3619:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3520:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3520:117:6"
											},
											{
												"body": {
													"nativeSrc": "3762:608:6",
													"nodeType": "YulBlock",
													"src": "3762:608:6",
													"statements": [
														{
															"nativeSrc": "3772:90:6",
															"nodeType": "YulAssignment",
															"src": "3772:90:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3854:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3854:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "3797:56:6",
																			"nodeType": "YulIdentifier",
																			"src": "3797:56:6"
																		},
																		"nativeSrc": "3797:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3797:64:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3781:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "3781:15:6"
																},
																"nativeSrc": "3781:81:6",
																"nodeType": "YulFunctionCall",
																"src": "3781:81:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3772:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3772:5:6"
																}
															]
														},
														{
															"nativeSrc": "3871:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3871:16:6",
															"value": {
																"name": "array",
																"nativeSrc": "3882:5:6",
																"nodeType": "YulIdentifier",
																"src": "3882:5:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3875:3:6",
																	"nodeType": "YulTypedName",
																	"src": "3875:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3904:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3904:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3911:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3911:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3897:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3897:6:6"
																},
																"nativeSrc": "3897:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3897:21:6"
															},
															"nativeSrc": "3897:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3897:21:6"
														},
														{
															"nativeSrc": "3927:23:6",
															"nodeType": "YulAssignment",
															"src": "3927:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3938:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3938:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3945:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3945:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3934:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:6"
																},
																"nativeSrc": "3934:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3934:16:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3927:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3927:3:6"
																}
															]
														},
														{
															"nativeSrc": "3960:44:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3960:44:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3978:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3978:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3990:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3990:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3998:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3998:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3986:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:6"
																		},
																		"nativeSrc": "3986:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3986:17:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3974:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:6"
																},
																"nativeSrc": "3974:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3974:30:6"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3964:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3964:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4032:103:6",
																"nodeType": "YulBlock",
																"src": "4032:103:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "4046:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4046:77:6"
																			},
																			"nativeSrc": "4046:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4046:79:6"
																		},
																		"nativeSrc": "4046:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4046:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4019:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4019:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4027:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4027:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4016:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4016:2:6"
																},
																"nativeSrc": "4016:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4016:15:6"
															},
															"nativeSrc": "4013:122:6",
															"nodeType": "YulIf",
															"src": "4013:122:6"
														},
														{
															"body": {
																"nativeSrc": "4220:144:6",
																"nodeType": "YulBlock",
																"src": "4220:144:6",
																"statements": [
																	{
																		"nativeSrc": "4235:21:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4235:21:6",
																		"value": {
																			"name": "src",
																			"nativeSrc": "4253:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4253:3:6"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "4239:10:6",
																				"nodeType": "YulTypedName",
																				"src": "4239:10:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4277:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4277:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "4303:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "4303:10:6"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "4315:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4315:3:6"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "4282:20:6",
																						"nodeType": "YulIdentifier",
																						"src": "4282:20:6"
																					},
																					"nativeSrc": "4282:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4282:37:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4270:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4270:6:6"
																			},
																			"nativeSrc": "4270:50:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4270:50:6"
																		},
																		"nativeSrc": "4270:50:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4270:50:6"
																	},
																	{
																		"nativeSrc": "4333:21:6",
																		"nodeType": "YulAssignment",
																		"src": "4333:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4344:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4344:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4349:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4349:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4340:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4340:3:6"
																			},
																			"nativeSrc": "4340:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4340:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "4333:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4333:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4173:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4173:3:6"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4178:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4178:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4170:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4170:2:6"
																},
																"nativeSrc": "4170:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4170:15:6"
															},
															"nativeSrc": "4144:220:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4186:25:6",
																"nodeType": "YulBlock",
																"src": "4186:25:6",
																"statements": [
																	{
																		"nativeSrc": "4188:21:6",
																		"nodeType": "YulAssignment",
																		"src": "4188:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "4199:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4199:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4204:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4204:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4195:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4195:3:6"
																			},
																			"nativeSrc": "4195:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4195:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "4188:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4188:3:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4148:21:6",
																"nodeType": "YulBlock",
																"src": "4148:21:6",
																"statements": [
																	{
																		"nativeSrc": "4150:17:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4150:17:6",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "4161:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4161:6:6"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "4154:3:6",
																				"nodeType": "YulTypedName",
																				"src": "4154:3:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4144:220:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3660:710:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3732:6:6",
														"nodeType": "YulTypedName",
														"src": "3732:6:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3740:6:6",
														"nodeType": "YulTypedName",
														"src": "3740:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3748:3:6",
														"nodeType": "YulTypedName",
														"src": "3748:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3756:5:6",
														"nodeType": "YulTypedName",
														"src": "3756:5:6",
														"type": ""
													}
												],
												"src": "3660:710:6"
											},
											{
												"body": {
													"nativeSrc": "4470:293:6",
													"nodeType": "YulBlock",
													"src": "4470:293:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4519:83:6",
																"nodeType": "YulBlock",
																"src": "4519:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4521:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4521:77:6"
																			},
																			"nativeSrc": "4521:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4521:79:6"
																		},
																		"nativeSrc": "4521:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4521:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4498:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4498:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4506:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4506:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4494:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4494:3:6"
																				},
																				"nativeSrc": "4494:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4494:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4513:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4513:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4490:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4490:3:6"
																		},
																		"nativeSrc": "4490:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4490:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4483:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:6"
																},
																"nativeSrc": "4483:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4483:35:6"
															},
															"nativeSrc": "4480:122:6",
															"nodeType": "YulIf",
															"src": "4480:122:6"
														},
														{
															"nativeSrc": "4611:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4611:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4638:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4638:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4625:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4625:12:6"
																},
																"nativeSrc": "4625:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4625:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4615:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4615:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4654:103:6",
															"nodeType": "YulAssignment",
															"src": "4654:103:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4730:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4730:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:4:6",
																				"nodeType": "YulLiteral",
																				"src": "4738:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4726:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4726:3:6"
																		},
																		"nativeSrc": "4726:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4726:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4745:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4745:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4753:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4753:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "4663:62:6",
																	"nodeType": "YulIdentifier",
																	"src": "4663:62:6"
																},
																"nativeSrc": "4663:94:6",
																"nodeType": "YulFunctionCall",
																"src": "4663:94:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4654:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4654:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4393:370:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4448:6:6",
														"nodeType": "YulTypedName",
														"src": "4448:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4456:3:6",
														"nodeType": "YulTypedName",
														"src": "4456:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4464:5:6",
														"nodeType": "YulTypedName",
														"src": "4464:5:6",
														"type": ""
													}
												],
												"src": "4393:370:6"
											},
											{
												"body": {
													"nativeSrc": "4860:448:6",
													"nodeType": "YulBlock",
													"src": "4860:448:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4906:83:6",
																"nodeType": "YulBlock",
																"src": "4906:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4908:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4908:77:6"
																			},
																			"nativeSrc": "4908:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4908:79:6"
																		},
																		"nativeSrc": "4908:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4908:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4881:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4890:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4890:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4877:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:6"
																		},
																		"nativeSrc": "4877:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4877:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4902:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4902:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4873:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4873:3:6"
																},
																"nativeSrc": "4873:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4873:32:6"
															},
															"nativeSrc": "4870:119:6",
															"nodeType": "YulIf",
															"src": "4870:119:6"
														},
														{
															"nativeSrc": "4999:302:6",
															"nodeType": "YulBlock",
															"src": "4999:302:6",
															"statements": [
																{
																	"nativeSrc": "5014:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5014:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5045:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5045:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5056:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5056:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5041:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5041:3:6"
																				},
																				"nativeSrc": "5041:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5041:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5028:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "5028:12:6"
																		},
																		"nativeSrc": "5028:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5028:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5018:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5018:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5106:83:6",
																		"nodeType": "YulBlock",
																		"src": "5106:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5108:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "5108:77:6"
																					},
																					"nativeSrc": "5108:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5108:79:6"
																				},
																				"nativeSrc": "5108:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5108:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5078:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5078:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5086:18:6",
																				"nodeType": "YulLiteral",
																				"src": "5086:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5075:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5075:2:6"
																		},
																		"nativeSrc": "5075:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5075:30:6"
																	},
																	"nativeSrc": "5072:117:6",
																	"nodeType": "YulIf",
																	"src": "5072:117:6"
																},
																{
																	"nativeSrc": "5203:88:6",
																	"nodeType": "YulAssignment",
																	"src": "5203:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5263:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5263:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5274:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5274:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5259:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5259:3:6"
																				},
																				"nativeSrc": "5259:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5259:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5283:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5283:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "5213:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "5213:45:6"
																		},
																		"nativeSrc": "5213:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5213:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5203:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5203:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4769:539:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4830:9:6",
														"nodeType": "YulTypedName",
														"src": "4830:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4841:7:6",
														"nodeType": "YulTypedName",
														"src": "4841:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4853:6:6",
														"nodeType": "YulTypedName",
														"src": "4853:6:6",
														"type": ""
													}
												],
												"src": "4769:539:6"
											},
											{
												"body": {
													"nativeSrc": "5414:519:6",
													"nodeType": "YulBlock",
													"src": "5414:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5460:83:6",
																"nodeType": "YulBlock",
																"src": "5460:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5462:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5462:77:6"
																			},
																			"nativeSrc": "5462:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5462:79:6"
																		},
																		"nativeSrc": "5462:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5462:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5435:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5435:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5444:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5444:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5431:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5431:3:6"
																		},
																		"nativeSrc": "5431:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5431:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5456:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5456:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5427:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5427:3:6"
																},
																"nativeSrc": "5427:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5427:32:6"
															},
															"nativeSrc": "5424:119:6",
															"nodeType": "YulIf",
															"src": "5424:119:6"
														},
														{
															"nativeSrc": "5553:117:6",
															"nodeType": "YulBlock",
															"src": "5553:117:6",
															"statements": [
																{
																	"nativeSrc": "5568:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5568:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5582:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5582:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5572:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5572:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5597:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5597:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5632:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5632:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5643:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5643:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5628:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5628:3:6"
																				},
																				"nativeSrc": "5628:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5628:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5652:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5652:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5607:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5607:20:6"
																		},
																		"nativeSrc": "5607:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5607:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5597:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5597:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5680:118:6",
															"nodeType": "YulBlock",
															"src": "5680:118:6",
															"statements": [
																{
																	"nativeSrc": "5695:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5695:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5709:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5709:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5699:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5699:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5725:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5725:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5760:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5760:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5771:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5771:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5756:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5756:3:6"
																				},
																				"nativeSrc": "5756:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5756:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5780:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5780:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5735:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5735:20:6"
																		},
																		"nativeSrc": "5735:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5735:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5725:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5725:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5808:118:6",
															"nodeType": "YulBlock",
															"src": "5808:118:6",
															"statements": [
																{
																	"nativeSrc": "5823:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5823:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5837:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5827:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5827:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5853:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5853:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5888:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5888:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5899:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5899:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5884:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:6"
																				},
																				"nativeSrc": "5884:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5884:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5908:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5908:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5863:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5863:20:6"
																		},
																		"nativeSrc": "5863:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5853:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5853:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5314:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5368:9:6",
														"nodeType": "YulTypedName",
														"src": "5368:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5379:7:6",
														"nodeType": "YulTypedName",
														"src": "5379:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5391:6:6",
														"nodeType": "YulTypedName",
														"src": "5391:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5399:6:6",
														"nodeType": "YulTypedName",
														"src": "5399:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5407:6:6",
														"nodeType": "YulTypedName",
														"src": "5407:6:6",
														"type": ""
													}
												],
												"src": "5314:619:6"
											},
											{
												"body": {
													"nativeSrc": "6035:73:6",
													"nodeType": "YulBlock",
													"src": "6035:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6052:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6052:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6057:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6045:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:6"
																},
																"nativeSrc": "6045:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6045:19:6"
															},
															"nativeSrc": "6045:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "6045:19:6"
														},
														{
															"nativeSrc": "6073:29:6",
															"nodeType": "YulAssignment",
															"src": "6073:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6092:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6092:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6097:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6097:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6088:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:6"
																},
																"nativeSrc": "6088:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6088:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6073:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "6073:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5939:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6007:3:6",
														"nodeType": "YulTypedName",
														"src": "6007:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6012:6:6",
														"nodeType": "YulTypedName",
														"src": "6012:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6023:11:6",
														"nodeType": "YulTypedName",
														"src": "6023:11:6",
														"type": ""
													}
												],
												"src": "5939:169:6"
											},
											{
												"body": {
													"nativeSrc": "6220:76:6",
													"nodeType": "YulBlock",
													"src": "6220:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6242:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6250:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6250:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:6"
																		},
																		"nativeSrc": "6238:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:14:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "6254:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6254:34:6",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:6"
																},
																"nativeSrc": "6231:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6231:58:6"
															},
															"nativeSrc": "6231:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "6231:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "6114:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6212:6:6",
														"nodeType": "YulTypedName",
														"src": "6212:6:6",
														"type": ""
													}
												],
												"src": "6114:182:6"
											},
											{
												"body": {
													"nativeSrc": "6448:220:6",
													"nodeType": "YulBlock",
													"src": "6448:220:6",
													"statements": [
														{
															"nativeSrc": "6458:74:6",
															"nodeType": "YulAssignment",
															"src": "6458:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6524:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6524:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6529:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6529:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6465:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6465:58:6"
																},
																"nativeSrc": "6465:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6465:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6458:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6630:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6630:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "6541:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6541:88:6"
																},
																"nativeSrc": "6541:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6541:93:6"
															},
															"nativeSrc": "6541:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6541:93:6"
														},
														{
															"nativeSrc": "6643:19:6",
															"nodeType": "YulAssignment",
															"src": "6643:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6654:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6654:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6659:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6650:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6650:3:6"
																},
																"nativeSrc": "6650:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6650:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6643:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6643:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6302:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6436:3:6",
														"nodeType": "YulTypedName",
														"src": "6436:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6444:3:6",
														"nodeType": "YulTypedName",
														"src": "6444:3:6",
														"type": ""
													}
												],
												"src": "6302:366:6"
											},
											{
												"body": {
													"nativeSrc": "6845:248:6",
													"nodeType": "YulBlock",
													"src": "6845:248:6",
													"statements": [
														{
															"nativeSrc": "6855:26:6",
															"nodeType": "YulAssignment",
															"src": "6855:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6867:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6867:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6878:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6878:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6863:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:6"
																},
																"nativeSrc": "6863:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6863:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6855:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6902:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6902:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6913:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6913:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6898:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6898:3:6"
																		},
																		"nativeSrc": "6898:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6898:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6921:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6921:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6927:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6927:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6917:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6917:3:6"
																		},
																		"nativeSrc": "6917:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6917:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6891:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6891:6:6"
																},
																"nativeSrc": "6891:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6891:47:6"
															},
															"nativeSrc": "6891:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6891:47:6"
														},
														{
															"nativeSrc": "6947:139:6",
															"nodeType": "YulAssignment",
															"src": "6947:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7081:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7081:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6955:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6955:124:6"
																},
																"nativeSrc": "6955:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6955:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6947:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6947:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6674:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6825:9:6",
														"nodeType": "YulTypedName",
														"src": "6825:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6840:4:6",
														"nodeType": "YulTypedName",
														"src": "6840:4:6",
														"type": ""
													}
												],
												"src": "6674:419:6"
											},
											{
												"body": {
													"nativeSrc": "7127:152:6",
													"nodeType": "YulBlock",
													"src": "7127:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7144:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7144:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7147:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7147:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7137:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7137:6:6"
																},
																"nativeSrc": "7137:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7137:88:6"
															},
															"nativeSrc": "7137:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7137:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7241:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7241:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7244:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7244:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7234:6:6"
																},
																"nativeSrc": "7234:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7234:15:6"
															},
															"nativeSrc": "7234:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7234:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7265:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7265:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7268:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7258:6:6"
																},
																"nativeSrc": "7258:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7258:15:6"
															},
															"nativeSrc": "7258:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7258:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7099:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7099:180:6"
											},
											{
												"body": {
													"nativeSrc": "7329:147:6",
													"nodeType": "YulBlock",
													"src": "7329:147:6",
													"statements": [
														{
															"nativeSrc": "7339:25:6",
															"nodeType": "YulAssignment",
															"src": "7339:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7362:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7362:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7344:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7344:17:6"
																},
																"nativeSrc": "7344:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7344:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7339:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7339:1:6"
																}
															]
														},
														{
															"nativeSrc": "7373:25:6",
															"nodeType": "YulAssignment",
															"src": "7373:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7396:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7396:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7378:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7378:17:6"
																},
																"nativeSrc": "7378:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7378:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7373:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7373:1:6"
																}
															]
														},
														{
															"nativeSrc": "7407:16:6",
															"nodeType": "YulAssignment",
															"src": "7407:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7418:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7421:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7414:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:6"
																},
																"nativeSrc": "7414:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7414:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7407:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7407:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7447:22:6",
																"nodeType": "YulBlock",
																"src": "7447:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7449:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7449:16:6"
																			},
																			"nativeSrc": "7449:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7449:18:6"
																		},
																		"nativeSrc": "7449:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7449:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7439:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7439:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7442:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7442:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7436:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7436:2:6"
																},
																"nativeSrc": "7436:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7436:10:6"
															},
															"nativeSrc": "7433:36:6",
															"nodeType": "YulIf",
															"src": "7433:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7285:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7316:1:6",
														"nodeType": "YulTypedName",
														"src": "7316:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7319:1:6",
														"nodeType": "YulTypedName",
														"src": "7319:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7325:3:6",
														"nodeType": "YulTypedName",
														"src": "7325:3:6",
														"type": ""
													}
												],
												"src": "7285:191:6"
											},
											{
												"body": {
													"nativeSrc": "7510:152:6",
													"nodeType": "YulBlock",
													"src": "7510:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7527:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7527:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7530:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7530:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7520:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7520:6:6"
																},
																"nativeSrc": "7520:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7520:88:6"
															},
															"nativeSrc": "7520:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7520:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7624:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7624:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7627:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7627:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7617:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7617:6:6"
																},
																"nativeSrc": "7617:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7617:15:6"
															},
															"nativeSrc": "7617:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7617:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7648:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7648:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7651:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7651:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7641:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7641:6:6"
																},
																"nativeSrc": "7641:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7641:15:6"
															},
															"nativeSrc": "7641:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7641:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7482:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7482:180:6"
											},
											{
												"body": {
													"nativeSrc": "7716:362:6",
													"nodeType": "YulBlock",
													"src": "7716:362:6",
													"statements": [
														{
															"nativeSrc": "7726:25:6",
															"nodeType": "YulAssignment",
															"src": "7726:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7749:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7749:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7731:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7731:17:6"
																},
																"nativeSrc": "7731:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7731:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7726:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7726:1:6"
																}
															]
														},
														{
															"nativeSrc": "7760:25:6",
															"nodeType": "YulAssignment",
															"src": "7760:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7783:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7783:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7765:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7765:17:6"
																},
																"nativeSrc": "7765:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7765:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7760:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7760:1:6"
																}
															]
														},
														{
															"nativeSrc": "7794:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7794:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7817:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7817:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7820:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7820:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7813:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7813:3:6"
																},
																"nativeSrc": "7813:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7813:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7798:11:6",
																	"nodeType": "YulTypedName",
																	"src": "7798:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7831:41:6",
															"nodeType": "YulAssignment",
															"src": "7831:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7860:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "7860:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7842:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7842:17:6"
																},
																"nativeSrc": "7842:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7842:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7831:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7831:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8049:22:6",
																"nodeType": "YulBlock",
																"src": "8049:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8051:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8051:16:6"
																			},
																			"nativeSrc": "8051:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8051:18:6"
																		},
																		"nativeSrc": "8051:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8051:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7982:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7982:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7975:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7975:6:6"
																				},
																				"nativeSrc": "7975:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7975:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8005:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8005:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8012:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "8012:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8021:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "8021:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8008:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8008:3:6"
																						},
																						"nativeSrc": "8008:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8008:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8002:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8002:2:6"
																				},
																				"nativeSrc": "8002:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8002:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7955:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7955:2:6"
																		},
																		"nativeSrc": "7955:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7955:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7935:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7935:6:6"
																},
																"nativeSrc": "7935:113:6",
																"nodeType": "YulFunctionCall",
																"src": "7935:113:6"
															},
															"nativeSrc": "7932:139:6",
															"nodeType": "YulIf",
															"src": "7932:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7668:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7699:1:6",
														"nodeType": "YulTypedName",
														"src": "7699:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7702:1:6",
														"nodeType": "YulTypedName",
														"src": "7702:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7708:7:6",
														"nodeType": "YulTypedName",
														"src": "7708:7:6",
														"type": ""
													}
												],
												"src": "7668:410:6"
											},
											{
												"body": {
													"nativeSrc": "8112:152:6",
													"nodeType": "YulBlock",
													"src": "8112:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8129:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8129:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8132:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8132:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8122:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8122:6:6"
																},
																"nativeSrc": "8122:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8122:88:6"
															},
															"nativeSrc": "8122:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8122:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8226:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8226:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8229:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8229:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8219:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8219:6:6"
																},
																"nativeSrc": "8219:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8219:15:6"
															},
															"nativeSrc": "8219:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8219:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8250:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8250:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8253:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8253:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8243:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8243:6:6"
																},
																"nativeSrc": "8243:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8243:15:6"
															},
															"nativeSrc": "8243:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8243:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8084:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8084:180:6"
											},
											{
												"body": {
													"nativeSrc": "8312:143:6",
													"nodeType": "YulBlock",
													"src": "8312:143:6",
													"statements": [
														{
															"nativeSrc": "8322:25:6",
															"nodeType": "YulAssignment",
															"src": "8322:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8345:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8345:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8327:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8327:17:6"
																},
																"nativeSrc": "8327:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8327:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8322:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8322:1:6"
																}
															]
														},
														{
															"nativeSrc": "8356:25:6",
															"nodeType": "YulAssignment",
															"src": "8356:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8379:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8379:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8361:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8361:17:6"
																},
																"nativeSrc": "8361:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8361:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8356:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8356:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8403:22:6",
																"nodeType": "YulBlock",
																"src": "8403:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8405:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8405:16:6"
																			},
																			"nativeSrc": "8405:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8405:18:6"
																		},
																		"nativeSrc": "8405:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8405:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8400:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8400:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8393:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8393:6:6"
																},
																"nativeSrc": "8393:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8393:9:6"
															},
															"nativeSrc": "8390:35:6",
															"nodeType": "YulIf",
															"src": "8390:35:6"
														},
														{
															"nativeSrc": "8435:14:6",
															"nodeType": "YulAssignment",
															"src": "8435:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8444:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8444:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8447:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8447:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8440:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:6"
																},
																"nativeSrc": "8440:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8440:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8435:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8435:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8270:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8301:1:6",
														"nodeType": "YulTypedName",
														"src": "8301:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8304:1:6",
														"nodeType": "YulTypedName",
														"src": "8304:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8310:1:6",
														"nodeType": "YulTypedName",
														"src": "8310:1:6",
														"type": ""
													}
												],
												"src": "8270:185:6"
											},
											{
												"body": {
													"nativeSrc": "8506:149:6",
													"nodeType": "YulBlock",
													"src": "8506:149:6",
													"statements": [
														{
															"nativeSrc": "8516:25:6",
															"nodeType": "YulAssignment",
															"src": "8516:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8539:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8539:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8521:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8521:17:6"
																},
																"nativeSrc": "8521:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8521:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8516:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8516:1:6"
																}
															]
														},
														{
															"nativeSrc": "8550:25:6",
															"nodeType": "YulAssignment",
															"src": "8550:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8573:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8555:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8555:17:6"
																},
																"nativeSrc": "8555:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8555:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8550:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8550:1:6"
																}
															]
														},
														{
															"nativeSrc": "8584:17:6",
															"nodeType": "YulAssignment",
															"src": "8584:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8596:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8596:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8599:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8599:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8592:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8592:3:6"
																},
																"nativeSrc": "8592:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8592:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8584:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8584:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8626:22:6",
																"nodeType": "YulBlock",
																"src": "8626:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8628:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8628:16:6"
																			},
																			"nativeSrc": "8628:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8628:18:6"
																		},
																		"nativeSrc": "8628:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8628:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8617:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8617:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8623:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8623:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8614:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8614:2:6"
																},
																"nativeSrc": "8614:11:6",
																"nodeType": "YulFunctionCall",
																"src": "8614:11:6"
															},
															"nativeSrc": "8611:37:6",
															"nodeType": "YulIf",
															"src": "8611:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8461:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8492:1:6",
														"nodeType": "YulTypedName",
														"src": "8492:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8495:1:6",
														"nodeType": "YulTypedName",
														"src": "8495:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8501:4:6",
														"nodeType": "YulTypedName",
														"src": "8501:4:6",
														"type": ""
													}
												],
												"src": "8461:194:6"
											},
											{
												"body": {
													"nativeSrc": "8767:64:6",
													"nodeType": "YulBlock",
													"src": "8767:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8789:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8797:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8797:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8785:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8785:3:6"
																		},
																		"nativeSrc": "8785:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8785:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8801:22:6",
																		"nodeType": "YulLiteral",
																		"src": "8801:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8778:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:6"
																},
																"nativeSrc": "8778:46:6",
																"nodeType": "YulFunctionCall",
																"src": "8778:46:6"
															},
															"nativeSrc": "8778:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "8778:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "8661:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8759:6:6",
														"nodeType": "YulTypedName",
														"src": "8759:6:6",
														"type": ""
													}
												],
												"src": "8661:170:6"
											},
											{
												"body": {
													"nativeSrc": "8983:220:6",
													"nodeType": "YulBlock",
													"src": "8983:220:6",
													"statements": [
														{
															"nativeSrc": "8993:74:6",
															"nodeType": "YulAssignment",
															"src": "8993:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9059:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9059:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9064:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9064:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9000:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9000:58:6"
																},
																"nativeSrc": "9000:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9000:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8993:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8993:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9165:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9165:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "9076:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9076:88:6"
																},
																"nativeSrc": "9076:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9076:93:6"
															},
															"nativeSrc": "9076:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9076:93:6"
														},
														{
															"nativeSrc": "9178:19:6",
															"nodeType": "YulAssignment",
															"src": "9178:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9189:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9189:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9194:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9194:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9185:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9185:3:6"
																},
																"nativeSrc": "9185:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9185:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9178:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9178:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8837:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8971:3:6",
														"nodeType": "YulTypedName",
														"src": "8971:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8979:3:6",
														"nodeType": "YulTypedName",
														"src": "8979:3:6",
														"type": ""
													}
												],
												"src": "8837:366:6"
											},
											{
												"body": {
													"nativeSrc": "9380:248:6",
													"nodeType": "YulBlock",
													"src": "9380:248:6",
													"statements": [
														{
															"nativeSrc": "9390:26:6",
															"nodeType": "YulAssignment",
															"src": "9390:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9402:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9398:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:6"
																},
																"nativeSrc": "9398:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9398:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9390:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9390:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9437:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9437:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9448:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9448:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9433:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9433:3:6"
																		},
																		"nativeSrc": "9433:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9433:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9456:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9456:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9462:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9452:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9452:3:6"
																		},
																		"nativeSrc": "9452:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9452:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9426:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:6"
																},
																"nativeSrc": "9426:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9426:47:6"
															},
															"nativeSrc": "9426:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9426:47:6"
														},
														{
															"nativeSrc": "9482:139:6",
															"nodeType": "YulAssignment",
															"src": "9482:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9616:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9616:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9490:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9490:124:6"
																},
																"nativeSrc": "9490:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9490:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9482:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9482:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9209:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9360:9:6",
														"nodeType": "YulTypedName",
														"src": "9360:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9375:4:6",
														"nodeType": "YulTypedName",
														"src": "9375:4:6",
														"type": ""
													}
												],
												"src": "9209:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c80635cd1d31d116100595780635cd1d31d146100e9578063df791e5014610119578063f3fef3a314610135578063f446c1d0146101515761007b565b80630f529ba21461007f57806347e7ef241461009d578063523fba7f146100b9575b5f80fd5b61008761016f565b6040516100949190610512565b60405180910390f35b6100b760048036038101906100b291906105c0565b610175565b005b6100d360048036038101906100ce91906105fe565b610226565b6040516100e09190610512565b60405180910390f35b61010360048036038101906100fe9190610779565b61023b565b6040516101109190610512565b60405180910390f35b610133600480360381019061012e91906107c0565b610303565b005b61014f600480360381019061014a91906105c0565b6103fd565b005b6101596104ec565b6040516101669190610512565b60405180910390f35b60015481565b5f81116101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae9061086a565b60405180910390fd5b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020391906108b5565b925050819055508060015f82825461021b91906108b5565b925050819055505050565b6002602052805f5260405f205f915090505481565b5f805f90505f600190505f5b84518110156102ad57848181518110610263576102626108e8565b5b60200260200101518361027691906108b5565b925084818151811061028b5761028a6108e8565b5b60200260200101518261029e9190610915565b91508080600101915050610247565b505f8160046102bc9190610915565b835f546102c99190610915565b8460025f546102d89190610915565b6102e29190610915565b6102ec91906108b5565b6102f69190610983565b9050809350505050919050565b5f8111610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033c9061086a565b60405180910390fd5b5f61034f826104f1565b90508160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461039d91906108b5565b925050819055508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103f091906109b3565b9250508190555050505050565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610a30565b60405180910390fd5b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104c991906109b3565b925050819055508060015f8282546104e191906109b3565b925050819055505050565b5f5481565b5f819050919050565b5f819050919050565b61050c816104fa565b82525050565b5f6020820190506105255f830184610503565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105658261053c565b9050919050565b6105758161055b565b811461057f575f80fd5b50565b5f813590506105908161056c565b92915050565b61059f816104fa565b81146105a9575f80fd5b50565b5f813590506105ba81610596565b92915050565b5f80604083850312156105d6576105d5610534565b5b5f6105e385828601610582565b92505060206105f4858286016105ac565b9150509250929050565b5f6020828403121561061357610612610534565b5b5f61062084828501610582565b91505092915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106738261062d565b810181811067ffffffffffffffff821117156106925761069161063d565b5b80604052505050565b5f6106a461052b565b90506106b0828261066a565b919050565b5f67ffffffffffffffff8211156106cf576106ce61063d565b5b602082029050602081019050919050565b5f80fd5b5f6106f66106f1846106b5565b61069b565b90508083825260208201905060208402830185811115610719576107186106e0565b5b835b81811015610742578061072e88826105ac565b84526020840193505060208101905061071b565b5050509392505050565b5f82601f8301126107605761075f610629565b5b81356107708482602086016106e4565b91505092915050565b5f6020828403121561078e5761078d610534565b5b5f82013567ffffffffffffffff8111156107ab576107aa610538565b5b6107b78482850161074c565b91505092915050565b5f805f606084860312156107d7576107d6610534565b5b5f6107e486828701610582565b93505060206107f586828701610582565b9250506040610806868287016105ac565b9150509250925092565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f610854602083610810565b915061085f82610820565b602082019050919050565b5f6020820190508181035f83015261088181610848565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108bf826104fa565b91506108ca836104fa565b92508282019050808211156108e2576108e1610888565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61091f826104fa565b915061092a836104fa565b9250828202610938816104fa565b9150828204841483151761094f5761094e610888565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61098d826104fa565b9150610998836104fa565b9250826109a8576109a7610956565b5b828204905092915050565b5f6109bd826104fa565b91506109c8836104fa565b92508282039050818111156109e0576109df610888565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610a1a601483610810565b9150610a25826109e6565b602082019050919050565b5f6020820190508181035f830152610a4781610a0e565b905091905056fea2646970667358221220effd03aff9c007f1dd51e8370850ab75a5f3bfde05cdd551612d70eeb1faa65364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5CD1D31D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x5CD1D31D EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xF446C1D0 EQ PUSH2 0x151 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xF529BA2 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2AD JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x263 JUMPI PUSH2 0x262 PUSH2 0x8E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x28B JUMPI PUSH2 0x28A PUSH2 0x8E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x247 JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x4 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST DUP4 PUSH0 SLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH0 SLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C SWAP1 PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x34F DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x474 SWAP1 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50C DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x525 PUSH0 DUP4 ADD DUP5 PUSH2 0x503 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x565 DUP3 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x575 DUP2 PUSH2 0x55B JUMP JUMPDEST DUP2 EQ PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x590 DUP2 PUSH2 0x56C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59F DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP2 EQ PUSH2 0x5A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BA DUP2 PUSH2 0x596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E3 DUP6 DUP3 DUP7 ADD PUSH2 0x582 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5F4 DUP6 DUP3 DUP7 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x613 JUMPI PUSH2 0x612 PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x620 DUP5 DUP3 DUP6 ADD PUSH2 0x582 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x673 DUP3 PUSH2 0x62D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0x63D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6A4 PUSH2 0x52B JUMP JUMPDEST SWAP1 POP PUSH2 0x6B0 DUP3 DUP3 PUSH2 0x66A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x6F6 PUSH2 0x6F1 DUP5 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0x6E0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x742 JUMPI DUP1 PUSH2 0x72E DUP9 DUP3 PUSH2 0x5AC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x71B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x629 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x770 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x7AA PUSH2 0x538 JUMP JUMPDEST JUMPDEST PUSH2 0x7B7 DUP5 DUP3 DUP6 ADD PUSH2 0x74C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7D6 PUSH2 0x534 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E4 DUP7 DUP3 DUP8 ADD PUSH2 0x582 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x7F5 DUP7 DUP3 DUP8 ADD PUSH2 0x582 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x806 DUP7 DUP3 DUP8 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH1 0x20 DUP4 PUSH2 0x810 JUMP JUMPDEST SWAP2 POP PUSH2 0x85F DUP3 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x881 DUP2 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8BF DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x8CA DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8E2 JUMPI PUSH2 0x8E1 PUSH2 0x888 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x91F DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x92A DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x938 DUP2 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x94F JUMPI PUSH2 0x94E PUSH2 0x888 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x98D DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x998 DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0x956 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x9C8 DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9E0 JUMPI PUSH2 0x9DF PUSH2 0x888 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA1A PUSH1 0x14 DUP4 PUSH2 0x810 JUMP JUMPDEST SWAP2 POP PUSH2 0xA25 DUP3 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA47 DUP2 PUSH2 0xA0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF REVERT SUB 0xAF 0xF9 0xC0 SMOD CALL 0xDD MLOAD 0xE8 CALLDATACOPY ADDMOD POP 0xAB PUSH22 0xA5F3BFDE05CDD551612D70EEB1FAA65364736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "115:1494:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;166:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;311:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;188:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;764:368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1138:307;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;533:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;144:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;166;;;;:::o;311:216::-;395:1;386:6;:10;378:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;467:6;443:13;:20;457:5;443:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;488:6;483:1;;:11;;;;;;;:::i;:::-;;;;;;;;311:216;;:::o;188:48::-;;;;;;;;;;;;;;;;;:::o;764:368::-;839:7;858:13;874:1;858:17;;885:14;902:1;885:18;;919:9;914:123;938:7;:14;934:1;:18;914:123;;;982:7;990:1;982:10;;;;;;;;:::i;:::-;;;;;;;;973:19;;;;;:::i;:::-;;;1016:7;1024:1;1016:10;;;;;;;;:::i;:::-;;;;;;;;1006:20;;;;;:::i;:::-;;;954:3;;;;;;;914:123;;;;1047:12;1097:6;1093:1;:10;;;;:::i;:::-;1083:5;1079:1;;:9;;;;:::i;:::-;1071:5;1067:1;1063;;:5;;;;:::i;:::-;:13;;;;:::i;:::-;:25;;;;:::i;:::-;1062:42;;;;:::i;:::-;1047:57;;1121:4;1114:11;;;;;764:368;;;:::o;1138:307::-;1240:1;1231:6;:10;1223:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1288:19;1310:28;1331:6;1310:20;:28::i;:::-;1288:50;;1385:6;1357:13;:24;1371:9;1357:24;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;1427:11;1401:13;:22;1415:7;1401:22;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1213:232;1138:307;;;:::o;533:225::-;619:13;:20;633:5;619:20;;;;;;;;;;;;;;;;609:6;:30;;601:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;698:6;674:13;:20;688:5;674:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;719:6;714:1;;:11;;;;;;;:::i;:::-;;;;;;;;533:225;;:::o;144:16::-;;;;:::o;1451:156::-;1519:7;1545:6;1538:13;;1451:156;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:117::-;2473:1;2470;2463:12;2487:102;2528:6;2579:2;2575:7;2570:2;2563:5;2559:14;2555:28;2545:38;;2487:102;;;:::o;2595:180::-;2643:77;2640:1;2633:88;2740:4;2737:1;2730:15;2764:4;2761:1;2754:15;2781:281;2864:27;2886:4;2864:27;:::i;:::-;2856:6;2852:40;2994:6;2982:10;2979:22;2958:18;2946:10;2943:34;2940:62;2937:88;;;3005:18;;:::i;:::-;2937:88;3045:10;3041:2;3034:22;2824:238;2781:281;;:::o;3068:129::-;3102:6;3129:20;;:::i;:::-;3119:30;;3158:33;3186:4;3178:6;3158:33;:::i;:::-;3068:129;;;:::o;3203:311::-;3280:4;3370:18;3362:6;3359:30;3356:56;;;3392:18;;:::i;:::-;3356:56;3442:4;3434:6;3430:17;3422:25;;3502:4;3496;3492:15;3484:23;;3203:311;;;:::o;3520:117::-;3629:1;3626;3619:12;3660:710;3756:5;3781:81;3797:64;3854:6;3797:64;:::i;:::-;3781:81;:::i;:::-;3772:90;;3882:5;3911:6;3904:5;3897:21;3945:4;3938:5;3934:16;3927:23;;3998:4;3990:6;3986:17;3978:6;3974:30;4027:3;4019:6;4016:15;4013:122;;;4046:79;;:::i;:::-;4013:122;4161:6;4144:220;4178:6;4173:3;4170:15;4144:220;;;4253:3;4282:37;4315:3;4303:10;4282:37;:::i;:::-;4277:3;4270:50;4349:4;4344:3;4340:14;4333:21;;4220:144;4204:4;4199:3;4195:14;4188:21;;4144:220;;;4148:21;3762:608;;3660:710;;;;;:::o;4393:370::-;4464:5;4513:3;4506:4;4498:6;4494:17;4490:27;4480:122;;4521:79;;:::i;:::-;4480:122;4638:6;4625:20;4663:94;4753:3;4745:6;4738:4;4730:6;4726:17;4663:94;:::i;:::-;4654:103;;4470:293;4393:370;;;;:::o;4769:539::-;4853:6;4902:2;4890:9;4881:7;4877:23;4873:32;4870:119;;;4908:79;;:::i;:::-;4870:119;5056:1;5045:9;5041:17;5028:31;5086:18;5078:6;5075:30;5072:117;;;5108:79;;:::i;:::-;5072:117;5213:78;5283:7;5274:6;5263:9;5259:22;5213:78;:::i;:::-;5203:88;;4999:302;4769:539;;;;:::o;5314:619::-;5391:6;5399;5407;5456:2;5444:9;5435:7;5431:23;5427:32;5424:119;;;5462:79;;:::i;:::-;5424:119;5582:1;5607:53;5652:7;5643:6;5632:9;5628:22;5607:53;:::i;:::-;5597:63;;5553:117;5709:2;5735:53;5780:7;5771:6;5760:9;5756:22;5735:53;:::i;:::-;5725:63;;5680:118;5837:2;5863:53;5908:7;5899:6;5888:9;5884:22;5863:53;:::i;:::-;5853:63;;5808:118;5314:619;;;;;:::o;5939:169::-;6023:11;6057:6;6052:3;6045:19;6097:4;6092:3;6088:14;6073:29;;5939:169;;;;:::o;6114:182::-;6254:34;6250:1;6242:6;6238:14;6231:58;6114:182;:::o;6302:366::-;6444:3;6465:67;6529:2;6524:3;6465:67;:::i;:::-;6458:74;;6541:93;6630:3;6541:93;:::i;:::-;6659:2;6654:3;6650:12;6643:19;;6302:366;;;:::o;6674:419::-;6840:4;6878:2;6867:9;6863:18;6855:26;;6927:9;6921:4;6917:20;6913:1;6902:9;6898:17;6891:47;6955:131;7081:4;6955:131;:::i;:::-;6947:139;;6674:419;;;:::o;7099:180::-;7147:77;7144:1;7137:88;7244:4;7241:1;7234:15;7268:4;7265:1;7258:15;7285:191;7325:3;7344:20;7362:1;7344:20;:::i;:::-;7339:25;;7378:20;7396:1;7378:20;:::i;:::-;7373:25;;7421:1;7418;7414:9;7407:16;;7442:3;7439:1;7436:10;7433:36;;;7449:18;;:::i;:::-;7433:36;7285:191;;;;:::o;7482:180::-;7530:77;7527:1;7520:88;7627:4;7624:1;7617:15;7651:4;7648:1;7641:15;7668:410;7708:7;7731:20;7749:1;7731:20;:::i;:::-;7726:25;;7765:20;7783:1;7765:20;:::i;:::-;7760:25;;7820:1;7817;7813:9;7842:30;7860:11;7842:30;:::i;:::-;7831:41;;8021:1;8012:7;8008:15;8005:1;8002:22;7982:1;7975:9;7955:83;7932:139;;8051:18;;:::i;:::-;7932:139;7716:362;7668:410;;;;:::o;8084:180::-;8132:77;8129:1;8122:88;8229:4;8226:1;8219:15;8253:4;8250:1;8243:15;8270:185;8310:1;8327:20;8345:1;8327:20;:::i;:::-;8322:25;;8361:20;8379:1;8361:20;:::i;:::-;8356:25;;8400:1;8390:35;;8405:18;;:::i;:::-;8390:35;8447:1;8444;8440:9;8435:14;;8270:185;;;;:::o;8461:194::-;8501:4;8521:20;8539:1;8521:20;:::i;:::-;8516:25;;8555:20;8573:1;8555:20;:::i;:::-;8550:25;;8599:1;8596;8592:9;8584:17;;8623:1;8617:4;8614:11;8611:37;;;8628:18;;:::i;:::-;8611:37;8461:194;;;;:::o;8661:170::-;8801:22;8797:1;8789:6;8785:14;8778:46;8661:170;:::o;8837:366::-;8979:3;9000:67;9064:2;9059:3;9000:67;:::i;:::-;8993:74;;9076:93;9165:3;9076:93;:::i;:::-;9194:2;9189:3;9185:12;9178:19;;8837:366;;;:::o;9209:419::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9462:9;9456:4;9452:20;9448:1;9437:9;9433:17;9426:47;9490:131;9616:4;9490:131;:::i;:::-;9482:139;;9209:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "538400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"A()": "2490",
								"D()": "2426",
								"calculateInvariant(uint256[])": "infinite",
								"deposit(address,uint256)": "infinite",
								"swap(address,address,uint256)": "infinite",
								"tokenBalances(address)": "2847",
								"withdraw(address,uint256)": "infinite"
							},
							"internal": {
								"calculatePriceImpact(uint256)": "27"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 1609,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 305,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 305,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 305,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 305,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 243,
									"end": 305,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 243,
									"end": 305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 243,
									"end": 305,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 281,
									"end": 283,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 277,
									"end": 278,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 277,
									"end": 283,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 277,
									"end": 283,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 277,
									"end": 283,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 297,
									"end": 298,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 294,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 298,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 243,
									"end": 305,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1609,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220effd03aff9c007f1dd51e8370850ab75a5f3bfde05cdd551612d70eeb1faa65364736f6c634300081a0033",
									".code": [
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "5CD1D31D"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "5CD1D31D"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "DF791E50"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "F3FEF3A3"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "F446C1D0"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "F529BA2"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "47E7EF24"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "523FBA7F"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1609,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 166,
											"end": 182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 166,
											"end": 182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 311,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 311,
											"end": 527,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 311,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 311,
											"end": 527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 311,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 311,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 311,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 311,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 188,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 188,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 188,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 764,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 764,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 764,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1138,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1138,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 533,
											"end": 758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 533,
											"end": 758,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 758,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 533,
											"end": 758,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 533,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 533,
											"end": 758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 533,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 533,
											"end": 758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 144,
											"end": 160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 144,
											"end": 160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 182,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 166,
											"end": 182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 311,
											"end": 527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 395,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 386,
											"end": 396,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 378,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 378,
											"end": 433,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 456,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 443,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 462,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 463,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 463,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 443,
											"end": 463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 443,
											"end": 463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 463,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 443,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 443,
											"end": 473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 443,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 443,
											"end": 473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 443,
											"end": 473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 488,
											"end": 494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 483,
											"end": 494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 311,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 188,
											"end": 236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 839,
											"end": 846,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 858,
											"end": 875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 885,
											"end": 899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 885,
											"end": 903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 919,
											"end": 928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 938,
											"end": 945,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 934,
											"end": 935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 934,
											"end": 952,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 982,
											"end": 989,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 990,
											"end": 991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 982,
											"end": 992,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 982,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 982,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 982,
											"end": 992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 982,
											"end": 992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 992,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 982,
											"end": 992,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 973,
											"end": 992,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 973,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 973,
											"end": 992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 973,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 973,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 973,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 973,
											"end": 992,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 973,
											"end": 992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 973,
											"end": 992,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 973,
											"end": 992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1023,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1016,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1006,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 957,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 954,
											"end": 957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 954,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 954,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1093,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1080,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1079,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1076,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1064,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1063,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1063,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1063,
											"end": 1088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1063,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1088,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1063,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1062,
											"end": 1104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1062,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1062,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1125,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1125,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 764,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1241,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1223,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1223,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1310,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1338,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1310,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1370,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1357,
											"end": 1391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1414,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1401,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 533,
											"end": 758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 632,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 638,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 609,
											"end": 639,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 609,
											"end": 639,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 601,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 601,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 674,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 694,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 694,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 694,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 674,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 674,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 674,
											"end": 704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 719,
											"end": 725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 715,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 714,
											"end": 715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 714,
											"end": 725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 714,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 714,
											"end": 725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 714,
											"end": 725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 160,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 144,
											"end": 160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1607,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1451,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1607,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 442,
											"end": 517,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 442,
											"end": 517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 492,
											"end": 511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 492,
											"end": 511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 442,
											"end": 517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 442,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2481,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2364,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2589,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2487,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2583,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2775,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2595,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2720,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 3062,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2781,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2864,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2891,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2864,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2852,
											"end": 2892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3001,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2946,
											"end": 2956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2977,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3002,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 3025,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2937,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3005,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2937,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3034,
											"end": 3056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 3062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 3062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3197,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3068,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3129,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3186,
											"end": 3190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3158,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3514,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3203,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3362,
											"end": 3368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3412,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3356,
											"end": 3412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3392,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3412,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3356,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3637,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3520,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3660,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3756,
											"end": 3761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3797,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3797,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3861,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3797,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3781,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3781,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3917,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4030,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4031,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4135,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4013,
											"end": 4135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4046,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4046,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4046,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4135,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4013,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4167,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4315,
											"end": 4318,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4303,
											"end": 4313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4282,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4277,
											"end": 4280,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4353,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4340,
											"end": 4354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4220,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4144,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 4370,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 4370,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4763,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4393,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4498,
											"end": 4504,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4517,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4480,
											"end": 4602,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4521,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4521,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4602,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4480,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 4645,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4753,
											"end": 4756,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4736,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4663,
											"end": 4757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4757,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4663,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4763,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 5308,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4769,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4888,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4877,
											"end": 4900,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4905,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4989,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4870,
											"end": 4989,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4908,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4908,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4987,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4908,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4989,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4870,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5059,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5086,
											"end": 5104,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5189,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5072,
											"end": 5189,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5108,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5108,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5187,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5108,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5189,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5072,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5259,
											"end": 5281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5213,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5213,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 5308,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 5308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 5308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 5308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5933,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5314,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5442,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5459,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5462,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5462,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5424,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5607,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5607,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5660,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5735,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5780,
											"end": 5787,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5756,
											"end": 5778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5735,
											"end": 5788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5788,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5735,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5788,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5908,
											"end": 5915,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 5897,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 5906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5863,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5863,
											"end": 5916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5863,
											"end": 5916,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5863,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5933,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5933,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5933,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 6108,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5939,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6088,
											"end": 6102,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 6108,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 6108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 6108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 6108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 6108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6296,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6114,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6254,
											"end": 6288,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 6250,
											"end": 6251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6242,
											"end": 6248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6289,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6668,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 6302,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6444,
											"end": 6447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6529,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6524,
											"end": 6527,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6465,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6465,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6465,
											"end": 6532,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6465,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6532,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6630,
											"end": 6633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6541,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6634,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6541,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 6662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 6662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 7093,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6674,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6927,
											"end": 6936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 6937,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6914,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 6915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7081,
											"end": 7085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 6955,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 7086,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6955,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 7086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 7086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 7093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 7093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 7093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 7093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7279,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 7099,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7224,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7144,
											"end": 7145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7244,
											"end": 7248,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7234,
											"end": 7249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7268,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7476,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7285,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7362,
											"end": 7363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7344,
											"end": 7364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7396,
											"end": 7397,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7378,
											"end": 7398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7398,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7421,
											"end": 7422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7414,
											"end": 7423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7439,
											"end": 7440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7446,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7433,
											"end": 7469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 7449,
											"end": 7467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7469,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7433,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7476,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7662,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7482,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7607,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7631,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7617,
											"end": 7632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7655,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7656,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 8078,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 7668,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7708,
											"end": 7715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7749,
											"end": 7750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7731,
											"end": 7751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 7751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 7751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7783,
											"end": 7784,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7765,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7822,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7842,
											"end": 7872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7872,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7842,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7831,
											"end": 7872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7831,
											"end": 7872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8012,
											"end": 8019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8023,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8005,
											"end": 8006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8024,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 8038,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7932,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7932,
											"end": 8071,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8051,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7932,
											"end": 8071,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7932,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 8078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 8078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 8078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 8078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 8078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 8078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8264,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8084,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8132,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8129,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 8226,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8219,
											"end": 8234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8257,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8250,
											"end": 8251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8258,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8455,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8270,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8327,
											"end": 8347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8347,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8327,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8322,
											"end": 8347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8322,
											"end": 8347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8379,
											"end": 8380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8361,
											"end": 8381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8381,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8361,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8381,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8390,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8390,
											"end": 8425,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8405,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8390,
											"end": 8425,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8390,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 8449,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8455,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8655,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 8461,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8501,
											"end": 8505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8521,
											"end": 8541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8573,
											"end": 8574,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8555,
											"end": 8575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8555,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8550,
											"end": 8575,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8550,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8623,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8614,
											"end": 8625,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8648,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8611,
											"end": 8648,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8628,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8648,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8611,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8655,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8831,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 8661,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8801,
											"end": 8823,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 8797,
											"end": 8798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 8795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8785,
											"end": 8799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 8824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 9203,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8837,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8979,
											"end": 8982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9000,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 9059,
											"end": 9062,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9000,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9000,
											"end": 9067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9000,
											"end": 9067,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9000,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9076,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 9165,
											"end": 9168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9076,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 9076,
											"end": 9169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9076,
											"end": 9169,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 9076,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9196,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9189,
											"end": 9192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9185,
											"end": 9197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 9203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 9203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 9203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 9203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9628,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 9209,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9452,
											"end": 9472,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9437,
											"end": 9446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9433,
											"end": 9450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9616,
											"end": 9620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9490,
											"end": 9621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9621,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9490,
											"end": 9621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9628,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9628,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/StableSwapAMM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"A()": "f446c1d0",
							"D()": "0f529ba2",
							"calculateInvariant(uint256[])": "5cd1d31d",
							"deposit(address,uint256)": "47e7ef24",
							"swap(address,address,uint256)": "df791e50",
							"tokenBalances(address)": "523fba7f",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_A\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"A\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"D\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"calculateInvariant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StableSwapAMM.sol\":\"StableSwapAMM\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StableSwapAMM.sol\":{\"keccak256\":\"0x4e85c7467c9166db7a664d4a85a3c1573a4cf2ec8a63a40faaee969b006d19d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2d21cb0fe8985efb692354ac32db4a07bee3bbf6eafe8a57d19467246c209b2\",\"dweb:/ipfs/QmU5vHQ4KUHXnvdocZJyrzgL52tVaWwv3qNDviLMJEMQfj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 790,
								"contract": "contracts/StableSwapAMM.sol:StableSwapAMM",
								"label": "A",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 792,
								"contract": "contracts/StableSwapAMM.sol:StableSwapAMM",
								"label": "D",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 796,
								"contract": "contracts/StableSwapAMM.sol:StableSwapAMM",
								"label": "tokenBalances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/StableSwapAMM.sol": {
				"ast": {
					"absolutePath": "contracts/StableSwapAMM.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"StableSwapAMM": [
							970
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 971,
							"sourceUnit": 652,
							"src": "58:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StableSwapAMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 970,
							"linearizedBaseContracts": [
								970
							],
							"name": "StableSwapAMM",
							"nameLocation": "124:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f446c1d0",
									"id": 790,
									"mutability": "mutable",
									"name": "A",
									"nameLocation": "159:1:5",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "144:16:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 789,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "144:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f529ba2",
									"id": 792,
									"mutability": "mutable",
									"name": "D",
									"nameLocation": "181:1:5",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "166:16:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "166:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "523fba7f",
									"id": 796,
									"mutability": "mutable",
									"name": "tokenBalances",
									"nameLocation": "223:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "188:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 795,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 793,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "196:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "188:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 794,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "207:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "267:38:5",
										"statements": [
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 801,
														"name": "A",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "277:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "_A",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "281:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "277:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "277:6:5"
											},
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "D",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "293:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "293:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "293:5:5"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "_A",
												"nameLocation": "263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:12:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:0:5"
									},
									"scope": 970,
									"src": "243:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "368:159:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 818,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "386:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "395:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "386:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "398:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "378:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "378:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "378:55:5"
											},
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 824,
															"name": "tokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "443:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 825,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "457:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "443:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 827,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "467:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "443:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "443:30:5"
											},
											{
												"expression": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 830,
														"name": "D",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 831,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "488:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "483:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "483:11:5"
											}
										]
									},
									"functionSelector": "47e7ef24",
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "320:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "336:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "328:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "351:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "343:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:31:5"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "368:0:5"
									},
									"scope": 970,
									"src": "311:216:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "591:167:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 843,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "609:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 844,
																	"name": "tokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "619:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 846,
																"indexExpression": {
																	"id": 845,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "633:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "619:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "609:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "641:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "601:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "601:63:5"
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 851,
															"name": "tokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "674:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 852,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "688:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "674:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 854,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "698:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "674:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "674:30:5"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 857,
														"name": "D",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "714:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 858,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "719:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "714:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "714:11:5"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "542:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "559:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "551:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "574:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "566:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:31:5"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:0:5"
									},
									"scope": 970,
									"src": "533:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "848:284:5",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "sumXi",
														"nameLocation": "866:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "858:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "858:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"hexValue": "30",
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "874:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:17:5"
											},
											{
												"assignments": [
													875
												],
												"declarations": [
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "prodXi",
														"nameLocation": "893:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "885:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "885:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"hexValue": "31",
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "902:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "885:18:5"
											},
											{
												"body": {
													"id": 901,
													"nodeType": "Block",
													"src": "959:78:5",
													"statements": [
														{
															"expression": {
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 889,
																	"name": "sumXi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "973:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 890,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "982:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 892,
																	"indexExpression": {
																		"id": 891,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "990:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "982:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "973:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 894,
															"nodeType": "ExpressionStatement",
															"src": "973:19:5"
														},
														{
															"expression": {
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 895,
																	"name": "prodXi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "1006:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 896,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "1016:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 898,
																	"indexExpression": {
																		"id": 897,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "1024:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1016:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1006:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 900,
															"nodeType": "ExpressionStatement",
															"src": "1006:20:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 883,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "946:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "938:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "934:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 902,
												"initializationExpression": {
													"assignments": [
														879
													],
													"declarations": [
														{
															"constant": false,
															"id": 879,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "927:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 902,
															"src": "919:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 878,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "919:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 881,
													"initialValue": {
														"hexValue": "30",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "931:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "919:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "954:3:5",
														"subExpression": {
															"id": 886,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 888,
													"nodeType": "ExpressionStatement",
													"src": "954:3:5"
												},
												"nodeType": "ForStatement",
												"src": "914:123:5"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "newD",
														"nameLocation": "1055:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "1047:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1047:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 905,
																			"name": "A",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "1063:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1067:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "1063:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 908,
																		"name": "sumXi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "1071:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1063:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 910,
																		"name": "A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "1079:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 911,
																		"name": "sumXi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "1083:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1079:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1063:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 914,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1062:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1093:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 916,
																	"name": "prodXi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "1097:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1093:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 918,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1092:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1062:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1047:57:5"
											},
											{
												"expression": {
													"id": 921,
													"name": "newD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "1121:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 869,
												"id": 922,
												"nodeType": "Return",
												"src": "1114:11:5"
											}
										]
									},
									"functionSelector": "5cd1d31d",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateInvariant",
									"nameLocation": "773:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "809:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "792:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 863,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "792:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 864,
													"nodeType": "ArrayTypeName",
													"src": "792:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:26:5"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "839:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:9:5"
									},
									"scope": 970,
									"src": "764:368:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "1213:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 934,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "1231:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1240:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1231:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1243:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1223:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "1223:55:5"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "priceImpact",
														"nameLocation": "1296:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 958,
														"src": "1288:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [
														{
															"id": 943,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "1331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 942,
														"name": "calculatePriceImpact",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1310:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1288:50:5"
											},
											{
												"expression": {
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 946,
															"name": "tokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "1357:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 948,
														"indexExpression": {
															"id": 947,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "1371:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1357:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 949,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1385:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1357:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "1357:34:5"
											},
											{
												"expression": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 952,
															"name": "tokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "1401:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 954,
														"indexExpression": {
															"id": 953,
															"name": "toToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "1415:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1401:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 955,
														"name": "priceImpact",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "1427:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1401:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "1401:37:5"
											}
										]
									},
									"functionSelector": "df791e50",
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1147:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "fromToken",
												"nameLocation": "1160:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "1152:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "toToken",
												"nameLocation": "1179:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "1171:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1196:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "1188:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:52:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1213:0:5"
									},
									"scope": 970,
									"src": "1138:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1528:79:5",
										"statements": [
											{
												"expression": {
													"id": 966,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "1545:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 965,
												"id": 967,
												"nodeType": "Return",
												"src": "1538:13:5"
											}
										]
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePriceImpact",
									"nameLocation": "1460:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1489:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1481:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:16:5"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1519:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:9:5"
									},
									"scope": 970,
									"src": "1451:156:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 971,
							"src": "115:1494:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1578:5"
				},
				"id": 5
			}
		}
	}
}